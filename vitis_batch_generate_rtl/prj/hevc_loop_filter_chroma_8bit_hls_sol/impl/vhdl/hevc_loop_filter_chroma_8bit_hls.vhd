-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hevc_loop_filter_chroma_8bit_hls is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_core : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_part : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_parent : IN STD_LOGIC_VECTOR (7 downto 0);
    pix_base_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    pix_base_ce0 : OUT STD_LOGIC;
    pix_base_we0 : OUT STD_LOGIC;
    pix_base_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pix_base_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    pix_base_address1 : OUT STD_LOGIC_VECTOR (20 downto 0);
    pix_base_ce1 : OUT STD_LOGIC;
    pix_base_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_offset : IN STD_LOGIC_VECTOR (31 downto 0);
    xstride : IN STD_LOGIC_VECTOR (31 downto 0);
    ystride : IN STD_LOGIC_VECTOR (31 downto 0);
    tc_arr_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    tc_arr_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    no_p_arr_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    no_p_arr_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    no_q_arr_0 : IN STD_LOGIC_VECTOR (7 downto 0);
    no_q_arr_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of hevc_loop_filter_chroma_8bit_hls is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hevc_loop_filter_chroma_8bit_hls_hevc_loop_filter_chroma_8bit_hls,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu19p-fsvb3824-2-e,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.153000,HLS_SYN_LAT=35,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=618,HLS_SYN_LUT=912,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ystride_read_reg_325 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln62_fu_170_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln62_reg_330 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_cast_fu_184_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_cast_reg_335 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul13_cast_fu_200_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul13_cast_reg_340 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln_fu_206_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln_reg_345 : STD_LOGIC_VECTOR (33 downto 0);
    signal tc_arr_0_read_reg_350 : STD_LOGIC_VECTOR (31 downto 0);
    signal tc_arr_1_read_reg_355 : STD_LOGIC_VECTOR (31 downto 0);
    signal no_p_arr_0_read_reg_360 : STD_LOGIC_VECTOR (7 downto 0);
    signal no_p_arr_1_read_reg_365 : STD_LOGIC_VECTOR (7 downto 0);
    signal no_q_arr_0_read_reg_370 : STD_LOGIC_VECTOR (7 downto 0);
    signal no_q_arr_1_read_reg_375 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln76_1_fu_233_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln76_1_reg_383 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln76_fu_239_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln76_reg_388 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln79_1_fu_260_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln79_1_reg_393 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln80_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln80_reg_398 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln84_fu_271_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln84_reg_402 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln85_fu_278_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln85_reg_407 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub38_fu_285_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub38_reg_412 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start : STD_LOGIC;
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_done : STD_LOGIC;
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_idle : STD_LOGIC;
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ready : STD_LOGIC;
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ce : STD_LOGIC;
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address0 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce0 : STD_LOGIC;
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_we0 : STD_LOGIC;
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce1 : STD_LOGIC;
    signal icmp_ln76_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op70_call_state2 : BOOLEAN;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_phi_mux_idx_ext3_pn_phi_fu_147_p4 : STD_LOGIC_VECTOR (33 downto 0);
    signal idx_ext3_pn_reg_144 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg : STD_LOGIC := '0';
    signal pix_07_idx_fu_82 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal add_ln76_fu_296_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal frame_offset_cast_fu_174_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal j_fu_86 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal empty_fu_178_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_15_fu_188_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl_fu_192_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln79_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln79_fu_250_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tc_fu_256_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln76_fu_292_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_condition_264 : BOOLEAN;
    signal ap_condition_267 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component hevc_loop_filter_chroma_8bit_hls_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        sext_ln76 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty_12 : IN STD_LOGIC_VECTOR (20 downto 0);
        mul13_cast : IN STD_LOGIC_VECTOR (20 downto 0);
        pix_base_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
        pix_base_ce0 : OUT STD_LOGIC;
        pix_base_we0 : OUT STD_LOGIC;
        pix_base_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pix_base_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        pix_base_address1 : OUT STD_LOGIC_VECTOR (20 downto 0);
        pix_base_ce1 : OUT STD_LOGIC;
        pix_base_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        empty : IN STD_LOGIC_VECTOR (20 downto 0);
        sub38 : IN STD_LOGIC_VECTOR (15 downto 0);
        tc : IN STD_LOGIC_VECTOR (14 downto 0);
        select_ln84 : IN STD_LOGIC_VECTOR (7 downto 0);
        select_ln85 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153 : component hevc_loop_filter_chroma_8bit_hls_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start,
        ap_done => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_done,
        ap_idle => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_idle,
        ap_ready => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ready,
        ap_ce => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ce,
        sext_ln76 => ystride_read_reg_325,
        empty_12 => trunc_ln76_reg_388,
        mul13_cast => mul13_cast_reg_340,
        pix_base_address0 => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address0,
        pix_base_ce0 => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce0,
        pix_base_we0 => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_we0,
        pix_base_d0 => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_d0,
        pix_base_q0 => pix_base_q0,
        pix_base_address1 => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address1,
        pix_base_ce1 => grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce1,
        pix_base_q1 => pix_base_q1,
        empty => trunc_ln62_reg_330,
        sub38 => sub38_reg_412,
        tc => trunc_ln79_1_reg_393,
        select_ln84 => select_ln84_reg_402,
        select_ln85 => select_ln85_reg_407);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm <= ap_NS_fsm;
                end if; 
            end if;
        end if;
    end process;


    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce) and (ap_predicate_op70_call_state2 = ap_const_boolean_1))) then 
                    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ready = ap_const_logic_1)) then 
                    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    idx_ext3_pn_reg_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_267)) then 
                    idx_ext3_pn_reg_144 <= shl_ln_reg_345;
                elsif ((ap_const_boolean_1 = ap_condition_264)) then 
                    idx_ext3_pn_reg_144 <= mul_cast_reg_335;
                end if;
            end if; 
        end if;
    end process;

    j_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    j_fu_86 <= ap_const_lv2_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then 
                    j_fu_86 <= add_ln76_1_reg_383;
                end if;
            end if; 
        end if;
    end process;

    pix_07_idx_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    pix_07_idx_fu_82 <= frame_offset_cast_fu_174_p1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then 
                    pix_07_idx_fu_82 <= add_ln76_fu_296_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln76_1_reg_383 <= add_ln76_1_fu_233_p2;
                icmp_ln80_reg_398 <= icmp_ln80_fu_265_p2;
                select_ln84_reg_402 <= select_ln84_fu_271_p3;
                select_ln85_reg_407 <= select_ln85_fu_278_p3;
                sub38_reg_412 <= sub38_fu_285_p2;
                trunc_ln76_reg_388 <= trunc_ln76_fu_239_p1;
                trunc_ln79_1_reg_393 <= trunc_ln79_1_fu_260_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    mul13_cast_reg_340(20 downto 1) <= mul13_cast_fu_200_p2(20 downto 1);
                mul_cast_reg_335 <= mul_cast_fu_184_p1;
                no_p_arr_0_read_reg_360 <= no_p_arr_0;
                no_p_arr_1_read_reg_365 <= no_p_arr_1;
                no_q_arr_0_read_reg_370 <= no_q_arr_0;
                no_q_arr_1_read_reg_375 <= no_q_arr_1;
                    shl_ln_reg_345(33 downto 2) <= shl_ln_fu_206_p3(33 downto 2);
                tc_arr_0_read_reg_350 <= tc_arr_0;
                tc_arr_1_read_reg_355 <= tc_arr_1;
                trunc_ln62_reg_330 <= trunc_ln62_fu_170_p1;
                ystride_read_reg_325 <= ystride;
            end if;
        end if;
    end process;
    mul13_cast_reg_340(0) <= '0';
    shl_ln_reg_345(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2, icmp_ln76_fu_227_p2, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce) and (icmp_ln76_fu_227_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln76_1_fu_233_p2 <= std_logic_vector(unsigned(j_fu_86) + unsigned(ap_const_lv2_1));
    add_ln76_fu_296_p2 <= std_logic_vector(signed(sext_ln76_fu_292_p1) + signed(pix_07_idx_fu_82));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_ce)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_const_logic_0 = ap_ce))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(ap_ce, ap_block_state3_on_subcall_done)
    begin
        if (((ap_const_logic_0 = ap_ce) or (ap_const_boolean_1 = ap_block_state3_on_subcall_done))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(icmp_ln80_reg_398, grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_done)
    begin
                ap_block_state3_on_subcall_done <= ((grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_done = ap_const_logic_0) and (icmp_ln80_reg_398 = ap_const_lv1_0));
    end process;


    ap_condition_264_assign_proc : process(ap_CS_fsm_state2, icmp_ln80_fu_265_p2, icmp_ln76_fu_227_p2)
    begin
                ap_condition_264 <= ((icmp_ln80_fu_265_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln76_fu_227_p2 = ap_const_lv1_0));
    end process;


    ap_condition_267_assign_proc : process(icmp_ln80_reg_398, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
                ap_condition_267 <= ((icmp_ln80_reg_398 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_boolean_0 = ap_block_state3_on_subcall_done));
    end process;


    ap_done_assign_proc : process(ap_ce, ap_CS_fsm_state2, icmp_ln76_fu_227_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce) and (icmp_ln76_fu_227_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_idx_ext3_pn_phi_fu_147_p4_assign_proc : process(shl_ln_reg_345, icmp_ln80_reg_398, ap_CS_fsm_state3, idx_ext3_pn_reg_144)
    begin
        if (((icmp_ln80_reg_398 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_phi_mux_idx_ext3_pn_phi_fu_147_p4 <= shl_ln_reg_345;
        else 
            ap_phi_mux_idx_ext3_pn_phi_fu_147_p4 <= idx_ext3_pn_reg_144;
        end if; 
    end process;


    ap_predicate_op70_call_state2_assign_proc : process(icmp_ln80_fu_265_p2, icmp_ln76_fu_227_p2)
    begin
                ap_predicate_op70_call_state2 <= ((icmp_ln80_fu_265_p2 = ap_const_lv1_0) and (icmp_ln76_fu_227_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_ce, ap_CS_fsm_state2, icmp_ln76_fu_227_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_logic_1 = ap_ce) and (icmp_ln76_fu_227_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_15_fu_188_p1 <= xstride(20 - 1 downto 0);
    empty_fu_178_p2 <= std_logic_vector(shift_left(unsigned(ystride),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
        frame_offset_cast_fu_174_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(frame_offset),36));


    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ce_assign_proc : process(ap_ce, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ce <= ap_const_logic_1;
        else 
            grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start <= grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg;
    icmp_ln76_fu_227_p2 <= "1" when (j_fu_86 = ap_const_lv2_2) else "0";
    icmp_ln79_fu_244_p2 <= "1" when (j_fu_86 = ap_const_lv2_1) else "0";
    icmp_ln80_fu_265_p2 <= "1" when (signed(tc_fu_256_p1) < signed(ap_const_lv16_1)) else "0";
    mul13_cast_fu_200_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(p_shl_fu_192_p3));
        mul_cast_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_fu_178_p2),34));

    p_shl_fu_192_p3 <= (empty_15_fu_188_p1 & ap_const_lv1_0);
    pix_base_address0 <= grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address0;
    pix_base_address1 <= grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address1;
    pix_base_ce0 <= grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce0;
    pix_base_ce1 <= grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce1;
    pix_base_d0 <= grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_d0;
    pix_base_we0 <= grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_we0;
    select_ln79_fu_250_p3 <= 
        tc_arr_1_read_reg_355 when (icmp_ln79_fu_244_p2(0) = '1') else 
        tc_arr_0_read_reg_350;
    select_ln84_fu_271_p3 <= 
        no_p_arr_1_read_reg_365 when (icmp_ln79_fu_244_p2(0) = '1') else 
        no_p_arr_0_read_reg_360;
    select_ln85_fu_278_p3 <= 
        no_q_arr_1_read_reg_375 when (icmp_ln79_fu_244_p2(0) = '1') else 
        no_q_arr_0_read_reg_370;
        sext_ln76_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_idx_ext3_pn_phi_fu_147_p4),36));

    shl_ln_fu_206_p3 <= (ystride & ap_const_lv2_0);
    sub38_fu_285_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tc_fu_256_p1));
    tc_fu_256_p1 <= select_ln79_fu_250_p3(16 - 1 downto 0);
    trunc_ln62_fu_170_p1 <= xstride(21 - 1 downto 0);
    trunc_ln76_fu_239_p1 <= pix_07_idx_fu_82(21 - 1 downto 0);
    trunc_ln79_1_fu_260_p1 <= select_ln79_fu_250_p3(15 - 1 downto 0);
end behav;

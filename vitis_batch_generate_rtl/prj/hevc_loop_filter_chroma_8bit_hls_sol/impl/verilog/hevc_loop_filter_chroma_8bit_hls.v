// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hevc_loop_filter_chroma_8bit_hls_hevc_loop_filter_chroma_8bit_hls,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu19p-fsvb3824-2-e,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.153000,HLS_SYN_LAT=35,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=618,HLS_SYN_LUT=912,HLS_VERSION=2024_2}" *)

module hevc_loop_filter_chroma_8bit_hls (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_core,
        ap_part,
        ap_parent,
        pix_base_address0,
        pix_base_ce0,
        pix_base_we0,
        pix_base_d0,
        pix_base_q0,
        pix_base_address1,
        pix_base_ce1,
        pix_base_q1,
        frame_offset,
        xstride,
        ystride,
        tc_arr_0,
        tc_arr_1,
        no_p_arr_0,
        no_p_arr_1,
        no_q_arr_0,
        no_q_arr_1,
        ap_ce
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] ap_core;
input  [7:0] ap_part;
input  [7:0] ap_parent;
output  [20:0] pix_base_address0;
output   pix_base_ce0;
output   pix_base_we0;
output  [7:0] pix_base_d0;
input  [7:0] pix_base_q0;
output  [20:0] pix_base_address1;
output   pix_base_ce1;
input  [7:0] pix_base_q1;
input  [31:0] frame_offset;
input  [31:0] xstride;
input  [31:0] ystride;
input  [31:0] tc_arr_0;
input  [31:0] tc_arr_1;
input  [7:0] no_p_arr_0;
input  [7:0] no_p_arr_1;
input  [7:0] no_q_arr_0;
input  [7:0] no_q_arr_1;
input   ap_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] ystride_read_reg_325;
wire   [20:0] trunc_ln62_fu_170_p1;
reg   [20:0] trunc_ln62_reg_330;
wire  signed [33:0] mul_cast_fu_184_p1;
reg  signed [33:0] mul_cast_reg_335;
wire   [20:0] mul13_cast_fu_200_p2;
reg   [20:0] mul13_cast_reg_340;
wire   [33:0] shl_ln_fu_206_p3;
reg   [33:0] shl_ln_reg_345;
reg   [31:0] tc_arr_0_read_reg_350;
reg   [31:0] tc_arr_1_read_reg_355;
reg   [7:0] no_p_arr_0_read_reg_360;
reg   [7:0] no_p_arr_1_read_reg_365;
reg   [7:0] no_q_arr_0_read_reg_370;
reg   [7:0] no_q_arr_1_read_reg_375;
wire   [1:0] add_ln76_1_fu_233_p2;
reg   [1:0] add_ln76_1_reg_383;
wire    ap_CS_fsm_state2;
wire   [20:0] trunc_ln76_fu_239_p1;
reg   [20:0] trunc_ln76_reg_388;
wire   [14:0] trunc_ln79_1_fu_260_p1;
reg   [14:0] trunc_ln79_1_reg_393;
wire   [0:0] icmp_ln80_fu_265_p2;
reg   [0:0] icmp_ln80_reg_398;
wire   [7:0] select_ln84_fu_271_p3;
reg   [7:0] select_ln84_reg_402;
wire   [7:0] select_ln85_fu_278_p3;
reg   [7:0] select_ln85_reg_407;
wire   [15:0] sub38_fu_285_p2;
reg   [15:0] sub38_reg_412;
wire    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start;
wire    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_done;
wire    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_idle;
wire    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ready;
reg    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ce;
wire   [20:0] grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address0;
wire    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce0;
wire    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_we0;
wire   [7:0] grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_d0;
wire   [20:0] grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address1;
wire    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce1;
wire   [0:0] icmp_ln76_fu_227_p2;
reg    ap_predicate_op70_call_state2;
wire    ap_CS_fsm_state3;
reg   [33:0] ap_phi_mux_idx_ext3_pn_phi_fu_147_p4;
reg   [33:0] idx_ext3_pn_reg_144;
reg    ap_block_state3_on_subcall_done;
reg    grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg;
reg   [35:0] pix_07_idx_fu_82;
wire   [35:0] add_ln76_fu_296_p2;
wire  signed [35:0] frame_offset_cast_fu_174_p1;
reg   [1:0] j_fu_86;
wire   [31:0] empty_fu_178_p2;
wire   [19:0] empty_15_fu_188_p1;
wire   [20:0] p_shl_fu_192_p3;
wire   [0:0] icmp_ln79_fu_244_p2;
wire   [31:0] select_ln79_fu_250_p3;
wire   [15:0] tc_fu_256_p1;
wire  signed [35:0] sext_ln76_fu_292_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_condition_264;
reg    ap_condition_267;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg = 1'b0;
#0 pix_07_idx_fu_82 = 36'd0;
#0 j_fu_86 = 2'd0;
end

hevc_loop_filter_chroma_8bit_hls_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2 grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start),
    .ap_done(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_done),
    .ap_idle(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_idle),
    .ap_ready(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ready),
    .ap_ce(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ce),
    .sext_ln76(ystride_read_reg_325),
    .empty_12(trunc_ln76_reg_388),
    .mul13_cast(mul13_cast_reg_340),
    .pix_base_address0(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address0),
    .pix_base_ce0(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce0),
    .pix_base_we0(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_we0),
    .pix_base_d0(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_d0),
    .pix_base_q0(pix_base_q0),
    .pix_base_address1(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address1),
    .pix_base_ce1(grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce1),
    .pix_base_q1(pix_base_q1),
    .empty(trunc_ln62_reg_330),
    .sub38(sub38_reg_412),
    .tc(trunc_ln79_1_reg_393),
    .select_ln84(select_ln84_reg_402),
    .select_ln85(select_ln85_reg_407)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        if ((1'b1 == ap_ce)) begin
            ap_CS_fsm <= ap_NS_fsm;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce) & (ap_predicate_op70_call_state2 == 1'b1))) begin
            grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg <= 1'b1;
        end else if ((grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ready == 1'b1)) begin
            grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if ((1'b1 == ap_condition_267)) begin
            idx_ext3_pn_reg_144 <= shl_ln_reg_345;
        end else if ((1'b1 == ap_condition_264)) begin
            idx_ext3_pn_reg_144 <= mul_cast_reg_335;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            j_fu_86 <= 2'd0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
            j_fu_86 <= add_ln76_1_reg_383;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            pix_07_idx_fu_82 <= frame_offset_cast_fu_174_p1;
        end else if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
            pix_07_idx_fu_82 <= add_ln76_fu_296_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln76_1_reg_383 <= add_ln76_1_fu_233_p2;
        icmp_ln80_reg_398 <= icmp_ln80_fu_265_p2;
        select_ln84_reg_402 <= select_ln84_fu_271_p3;
        select_ln85_reg_407 <= select_ln85_fu_278_p3;
        sub38_reg_412 <= sub38_fu_285_p2;
        trunc_ln76_reg_388 <= trunc_ln76_fu_239_p1;
        trunc_ln79_1_reg_393 <= trunc_ln79_1_fu_260_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        mul13_cast_reg_340[20 : 1] <= mul13_cast_fu_200_p2[20 : 1];
        mul_cast_reg_335 <= mul_cast_fu_184_p1;
        no_p_arr_0_read_reg_360 <= no_p_arr_0;
        no_p_arr_1_read_reg_365 <= no_p_arr_1;
        no_q_arr_0_read_reg_370 <= no_q_arr_0;
        no_q_arr_1_read_reg_375 <= no_q_arr_1;
        shl_ln_reg_345[33 : 2] <= shl_ln_fu_206_p3[33 : 2];
        tc_arr_0_read_reg_350 <= tc_arr_0;
        tc_arr_1_read_reg_355 <= tc_arr_1;
        trunc_ln62_reg_330 <= trunc_ln62_fu_170_p1;
        ystride_read_reg_325 <= ystride;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (1'b0 == ap_ce))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_ce) | (1'b1 == ap_block_state3_on_subcall_done))) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce) & (icmp_ln76_fu_227_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln80_reg_398 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_phi_mux_idx_ext3_pn_phi_fu_147_p4 = shl_ln_reg_345;
    end else begin
        ap_phi_mux_idx_ext3_pn_phi_fu_147_p4 = idx_ext3_pn_reg_144;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce) & (icmp_ln76_fu_227_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & ((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3)))) begin
        grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ce = 1'b1;
    end else begin
        grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_ce) & (icmp_ln76_fu_227_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln76_1_fu_233_p2 = (j_fu_86 + 2'd1);

assign add_ln76_fu_296_p2 = ($signed(sext_ln76_fu_292_p1) + $signed(pix_07_idx_fu_82));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_done == 1'b0) & (icmp_ln80_reg_398 == 1'd0));
end

always @ (*) begin
    ap_condition_264 = ((icmp_ln80_fu_265_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln76_fu_227_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_267 = ((icmp_ln80_reg_398 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done));
end

always @ (*) begin
    ap_predicate_op70_call_state2 = ((icmp_ln80_fu_265_p2 == 1'd0) & (icmp_ln76_fu_227_p2 == 1'd0));
end

assign empty_15_fu_188_p1 = xstride[19:0];

assign empty_fu_178_p2 = ystride << 32'd2;

assign frame_offset_cast_fu_174_p1 = $signed(frame_offset);

assign grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start = grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_ap_start_reg;

assign icmp_ln76_fu_227_p2 = ((j_fu_86 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_244_p2 = ((j_fu_86 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_265_p2 = (($signed(tc_fu_256_p1) < $signed(16'd1)) ? 1'b1 : 1'b0);

assign mul13_cast_fu_200_p2 = (21'd0 - p_shl_fu_192_p3);

assign mul_cast_fu_184_p1 = $signed(empty_fu_178_p2);

assign p_shl_fu_192_p3 = {{empty_15_fu_188_p1}, {1'd0}};

assign pix_base_address0 = grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address0;

assign pix_base_address1 = grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_address1;

assign pix_base_ce0 = grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce0;

assign pix_base_ce1 = grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_ce1;

assign pix_base_d0 = grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_d0;

assign pix_base_we0 = grp_hevc_loop_filter_chroma_8bit_hls_Pipeline_VITIS_LOOP_87_2_fu_153_pix_base_we0;

assign select_ln79_fu_250_p3 = ((icmp_ln79_fu_244_p2[0:0] == 1'b1) ? tc_arr_1_read_reg_355 : tc_arr_0_read_reg_350);

assign select_ln84_fu_271_p3 = ((icmp_ln79_fu_244_p2[0:0] == 1'b1) ? no_p_arr_1_read_reg_365 : no_p_arr_0_read_reg_360);

assign select_ln85_fu_278_p3 = ((icmp_ln79_fu_244_p2[0:0] == 1'b1) ? no_q_arr_1_read_reg_375 : no_q_arr_0_read_reg_370);

assign sext_ln76_fu_292_p1 = $signed(ap_phi_mux_idx_ext3_pn_phi_fu_147_p4);

assign shl_ln_fu_206_p3 = {{ystride}, {2'd0}};

assign sub38_fu_285_p2 = (16'd0 - tc_fu_256_p1);

assign tc_fu_256_p1 = select_ln79_fu_250_p3[15:0];

assign trunc_ln62_fu_170_p1 = xstride[20:0];

assign trunc_ln76_fu_239_p1 = pix_07_idx_fu_82[20:0];

assign trunc_ln79_1_fu_260_p1 = select_ln79_fu_250_p3[14:0];

always @ (posedge ap_clk) begin
    mul13_cast_reg_340[0] <= 1'b0;
    shl_ln_reg_345[1:0] <= 2'b00;
end

endmodule //hevc_loop_filter_chroma_8bit_hls

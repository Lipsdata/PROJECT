

================================================================
== Vitis HLS Report for 'array_xor'
================================================================
* Date:           Thu Feb 27 14:42:33 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        prj
* Solution:       array_xor_sol (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu19p-fsvb3824-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.30 ns|  1.654 ns|     0.89 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |        ?|        ?|         ?|         ?|    0|    0|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_28_1  |        ?|        ?|         2|          1|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.65>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [../tutorial_example/source/hls.cpp:28]   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%spectopmodule_ln25 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2" [../tutorial_example/source/hls.cpp:25]   --->   Operation 6 'spectopmodule' 'spectopmodule_ln25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ap_core"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ap_core, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ap_part"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ap_part, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ap_parent"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ap_parent, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %arr_d1, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %arr_d1"   --->   Operation 14 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %arr_s1, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %arr_s1"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %arr_s2, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %arr_s2"   --->   Operation 18 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %count"   --->   Operation 19 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %count, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%count_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %count" [../tutorial_example/source/hls.cpp:25]   --->   Operation 21 'read' 'count_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.88ns)   --->   "%empty = icmp_sgt  i32 %count_read, i32 0" [../tutorial_example/source/hls.cpp:25]   --->   Operation 22 'icmp' 'empty' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%xor_ln28 = xor i32 %count_read, i32 4294967295" [../tutorial_example/source/hls.cpp:28]   --->   Operation 23 'xor' 'xor_ln28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.22ns) (out node of the LUT)   --->   "%select_ln28 = select i1 %empty, i32 %xor_ln28, i32 4294967295" [../tutorial_example/source/hls.cpp:28]   --->   Operation 24 'select' 'select_ln28' <Predicate = true> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.88ns)   --->   "%empty_7 = icmp_ugt  i32 %select_ln28, i32 4294967285" [../tutorial_example/source/hls.cpp:28]   --->   Operation 25 'icmp' 'empty_7' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_1)   --->   "%xor_ln28_1 = xor i32 %select_ln28, i32 4294967295" [../tutorial_example/source/hls.cpp:28]   --->   Operation 26 'xor' 'xor_ln28_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.22ns) (out node of the LUT)   --->   "%select_ln28_1 = select i1 %empty_7, i32 %xor_ln28_1, i32 10" [../tutorial_example/source/hls.cpp:28]   --->   Operation 27 'select' 'select_ln28_1' <Predicate = true> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.38ns)   --->   "%store_ln28 = store i4 0, i4 %i" [../tutorial_example/source/hls.cpp:28]   --->   Operation 28 'store' 'store_ln28' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln28 = br void %for.cond" [../tutorial_example/source/hls.cpp:28]   --->   Operation 29 'br' 'br_ln28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%i_1 = load i4 %i" [../tutorial_example/source/hls.cpp:28]   --->   Operation 30 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i4 %i_1" [../tutorial_example/source/hls.cpp:28]   --->   Operation 31 'zext' 'zext_ln28_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.88ns)   --->   "%icmp_ln28 = icmp_eq  i32 %zext_ln28_1, i32 %select_ln28_1" [../tutorial_example/source/hls.cpp:28]   --->   Operation 32 'icmp' 'icmp_ln28' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln28 = br i1 %icmp_ln28, void %for.inc, void %for.end" [../tutorial_example/source/hls.cpp:28]   --->   Operation 33 'br' 'br_ln28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.70ns)   --->   "%add_ln28 = add i4 %i_1, i4 1" [../tutorial_example/source/hls.cpp:28]   --->   Operation 34 'add' 'add_ln28' <Predicate = (!icmp_ln28)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i4 %i_1" [../tutorial_example/source/hls.cpp:28]   --->   Operation 35 'zext' 'zext_ln28' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%arr_s1_addr = getelementptr i32 %arr_s1, i64 0, i64 %zext_ln28" [../tutorial_example/source/hls.cpp:29]   --->   Operation 36 'getelementptr' 'arr_s1_addr' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_1 : Operation 37 [2/2] (0.69ns)   --->   "%arr_s1_load = load i4 %arr_s1_addr" [../tutorial_example/source/hls.cpp:29]   --->   Operation 37 'load' 'arr_s1_load' <Predicate = (!icmp_ln28)> <Delay = 0.69> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 0.69> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%arr_s2_addr = getelementptr i32 %arr_s2, i64 0, i64 %zext_ln28" [../tutorial_example/source/hls.cpp:29]   --->   Operation 38 'getelementptr' 'arr_s2_addr' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_1 : Operation 39 [2/2] (0.69ns)   --->   "%arr_s2_load = load i4 %arr_s2_addr" [../tutorial_example/source/hls.cpp:29]   --->   Operation 39 'load' 'arr_s2_load' <Predicate = (!icmp_ln28)> <Delay = 0.69> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 0.69> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_1 : Operation 40 [1/1] (0.38ns)   --->   "%store_ln28 = store i4 %add_ln28, i4 %i" [../tutorial_example/source/hls.cpp:28]   --->   Operation 40 'store' 'store_ln28' <Predicate = (!icmp_ln28)> <Delay = 0.38>
ST_1 : Operation 49 [1/1] (0.38ns)   --->   "%ret_ln31 = ret" [../tutorial_example/source/hls.cpp:31]   --->   Operation 49 'ret' 'ret_ln31' <Predicate = (icmp_ln28)> <Delay = 0.38>

State 2 <SV = 1> <Delay = 1.60>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%specpipeline_ln29 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [../tutorial_example/source/hls.cpp:29]   --->   Operation 41 'specpipeline' 'specpipeline_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [../tutorial_example/source/hls.cpp:28]   --->   Operation 42 'specloopname' 'specloopname_ln28' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/2] ( I:0.69ns O:0.69ns )   --->   "%arr_s1_load = load i4 %arr_s1_addr" [../tutorial_example/source/hls.cpp:29]   --->   Operation 43 'load' 'arr_s1_load' <Predicate = true> <Delay = 0.69> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 0.69> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 44 [1/2] ( I:0.69ns O:0.69ns )   --->   "%arr_s2_load = load i4 %arr_s2_addr" [../tutorial_example/source/hls.cpp:29]   --->   Operation 44 'load' 'arr_s2_load' <Predicate = true> <Delay = 0.69> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 0.69> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 45 [1/1] (0.21ns)   --->   "%xor_ln29 = xor i32 %arr_s2_load, i32 %arr_s1_load" [../tutorial_example/source/hls.cpp:29]   --->   Operation 45 'xor' 'xor_ln29' <Predicate = true> <Delay = 0.21> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.21> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%arr_d1_addr = getelementptr i32 %arr_d1, i64 0, i64 %zext_ln28" [../tutorial_example/source/hls.cpp:29]   --->   Operation 46 'getelementptr' 'arr_d1_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] ( I:0.69ns O:0.69ns )   --->   "%store_ln29 = store i32 %xor_ln29, i4 %arr_d1_addr" [../tutorial_example/source/hls.cpp:29]   --->   Operation 47 'store' 'store_ln29' <Predicate = true> <Delay = 0.69> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 0.69> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln28 = br void %for.cond" [../tutorial_example/source/hls.cpp:28]   --->   Operation 48 'br' 'br_ln28' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.300ns, clock uncertainty: 0.891ns.

 <State 1>: 1.654ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln28', ../tutorial_example/source/hls.cpp:28) of constant 0 on local variable 'i', ../tutorial_example/source/hls.cpp:28 [31]  (0.387 ns)
	'load' operation 4 bit ('i', ../tutorial_example/source/hls.cpp:28) on local variable 'i', ../tutorial_example/source/hls.cpp:28 [34]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln28', ../tutorial_example/source/hls.cpp:28) [36]  (0.880 ns)
	'store' operation 0 bit ('store_ln28', ../tutorial_example/source/hls.cpp:28) of variable 'add_ln28', ../tutorial_example/source/hls.cpp:28 on local variable 'i', ../tutorial_example/source/hls.cpp:28 [50]  (0.387 ns)

 <State 2>: 1.608ns
The critical path consists of the following:
	'load' operation 32 bit ('arr_s1_load', ../tutorial_example/source/hls.cpp:29) on array 'arr_s1' [44]  (0.699 ns)
	'xor' operation 32 bit ('xor_ln29', ../tutorial_example/source/hls.cpp:29) [47]  (0.210 ns)
	'store' operation 0 bit ('store_ln29', ../tutorial_example/source/hls.cpp:29) of variable 'xor_ln29', ../tutorial_example/source/hls.cpp:29 on array 'arr_d1' [49]  (0.699 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

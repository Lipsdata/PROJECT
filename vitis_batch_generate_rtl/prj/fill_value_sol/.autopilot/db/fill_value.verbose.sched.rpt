

================================================================
== Vitis HLS Report for 'fill_value'
================================================================
* Date:           Thu Feb 27 14:43:26 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        prj
* Solution:       fill_value_sol (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu19p-fsvb3824-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.30 ns|  2.128 ns|     0.89 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_45_1  |        ?|        ?|         1|          -|          -|     ?|        no|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.38>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [../tutorial_example/source/hls.cpp:45]   --->   Operation 3 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%spectopmodule_ln44 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2" [../tutorial_example/source/hls.cpp:44]   --->   Operation 4 'spectopmodule' 'spectopmodule_ln44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ap_core"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ap_core, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ap_part"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ap_part, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ap_parent"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ap_parent, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %value_r"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %value_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %fillsize"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %fillsize, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %big_array, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %big_array"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%fillsize_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %fillsize" [../tutorial_example/source/hls.cpp:44]   --->   Operation 17 'read' 'fillsize_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%value_r_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %value_r" [../tutorial_example/source/hls.cpp:44]   --->   Operation 18 'read' 'value_r_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.38ns)   --->   "%store_ln45 = store i14 0, i14 %i" [../tutorial_example/source/hls.cpp:45]   --->   Operation 19 'store' 'store_ln45' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln45 = br void %for.inc" [../tutorial_example/source/hls.cpp:45]   --->   Operation 20 'br' 'br_ln45' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.12>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%i_1 = load i14 %i" [../tutorial_example/source/hls.cpp:45]   --->   Operation 21 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln45_1 = zext i14 %i_1" [../tutorial_example/source/hls.cpp:45]   --->   Operation 22 'zext' 'zext_ln45_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.88ns)   --->   "%icmp_ln45 = icmp_slt  i32 %zext_ln45_1, i32 %fillsize_read" [../tutorial_example/source/hls.cpp:45]   --->   Operation 23 'icmp' 'icmp_ln45' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.76ns)   --->   "%add_ln45 = add i14 %i_1, i14 1" [../tutorial_example/source/hls.cpp:45]   --->   Operation 24 'add' 'add_ln45' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln45 = br i1 %icmp_ln45, void %for.end.loopexit, void %for.inc.split" [../tutorial_example/source/hls.cpp:45]   --->   Operation 25 'br' 'br_ln45' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln45 = zext i14 %i_1" [../tutorial_example/source/hls.cpp:45]   --->   Operation 26 'zext' 'zext_ln45' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%specpipeline_ln46 = specpipeline void @_ssdm_op_SpecPipeline, i32 0, i32 0, i32 1, i32 0, void @empty_0" [../tutorial_example/source/hls.cpp:46]   --->   Operation 27 'specpipeline' 'specpipeline_ln46' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%specloopname_ln45 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [../tutorial_example/source/hls.cpp:45]   --->   Operation 28 'specloopname' 'specloopname_ln45' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%big_array_addr = getelementptr i32 %big_array, i64 0, i64 %zext_ln45" [../tutorial_example/source/hls.cpp:47]   --->   Operation 29 'getelementptr' 'big_array_addr' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] ( I:1.24ns O:1.24ns )   --->   "%store_ln47 = store i32 %value_r_read, i14 %big_array_addr" [../tutorial_example/source/hls.cpp:47]   --->   Operation 30 'store' 'store_ln47' <Predicate = (icmp_ln45)> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10000> <RAM>
ST_2 : Operation 31 [1/1] (0.38ns)   --->   "%store_ln45 = store i14 %add_ln45, i14 %i" [../tutorial_example/source/hls.cpp:45]   --->   Operation 31 'store' 'store_ln45' <Predicate = (icmp_ln45)> <Delay = 0.38>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln45 = br void %for.inc" [../tutorial_example/source/hls.cpp:45]   --->   Operation 32 'br' 'br_ln45' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%ret_ln49 = ret" [../tutorial_example/source/hls.cpp:49]   --->   Operation 33 'ret' 'ret_ln49' <Predicate = (!icmp_ln45)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.300ns, clock uncertainty: 0.891ns.

 <State 1>: 0.387ns
The critical path consists of the following:
	'alloca' operation 14 bit ('i', ../tutorial_example/source/hls.cpp:45) [7]  (0.000 ns)
	'store' operation 0 bit ('store_ln45', ../tutorial_example/source/hls.cpp:45) of constant 0 on local variable 'i', ../tutorial_example/source/hls.cpp:45 [23]  (0.387 ns)

 <State 2>: 2.128ns
The critical path consists of the following:
	'load' operation 14 bit ('i', ../tutorial_example/source/hls.cpp:45) on local variable 'i', ../tutorial_example/source/hls.cpp:45 [26]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln45', ../tutorial_example/source/hls.cpp:45) [28]  (0.880 ns)
	'store' operation 0 bit ('store_ln47', ../tutorial_example/source/hls.cpp:47) of variable 'value_r_read', ../tutorial_example/source/hls.cpp:44 on array 'big_array' [36]  (1.248 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

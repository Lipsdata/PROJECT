-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convn_valid is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_core : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_part : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_parent : IN STD_LOGIC_VECTOR (7 downto 0);
    in_data_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    in_data_ce0 : OUT STD_LOGIC;
    in_data_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    in_w : IN STD_LOGIC_VECTOR (31 downto 0);
    in_h : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    kernel_ce0 : OUT STD_LOGIC;
    kernel_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_w : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_h : IN STD_LOGIC_VECTOR (31 downto 0);
    out_data_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    out_data_ce0 : OUT STD_LOGIC;
    out_data_we0 : OUT STD_LOGIC;
    out_data_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_data_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    out_w : IN STD_LOGIC_VECTOR (31 downto 0);
    out_h : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of convn_valid is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "convn_valid_convn_valid,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu19p-fsvb3824-2-e,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.692000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2308,HLS_SYN_LUT=1824,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_w_read_reg_288 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln79_fu_155_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln79_reg_299 : STD_LOGIC_VECTOR (4 downto 0);
    signal smax_fu_165_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal smax_reg_304 : STD_LOGIC_VECTOR (30 downto 0);
    signal smax1_fu_179_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal smax1_reg_309 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal out_h_read_reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal out_w_read_reg_329 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln79_1_fu_200_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln79_1_reg_334 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln79_2_fu_204_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln79_2_reg_339 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_143_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln74_reg_344 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln79_fu_220_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln79_reg_352 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln79_3_fu_226_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln79_3_reg_357 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_17_fu_230_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_17_reg_362 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln81_fu_244_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln81_reg_370 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln81_fu_250_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln81_reg_375 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_data_addr_reg_380 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_data_load_reg_385 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal bitcast_ln91_fu_273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_139_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_reg_398 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_start : STD_LOGIC;
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_done : STD_LOGIC;
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_idle : STD_LOGIC;
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_ready : STD_LOGIC;
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_in_data_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_in_data_ce0 : STD_LOGIC;
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_kernel_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_kernel_ce0 : STD_LOGIC;
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_sum_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_sum_out_ap_vld : STD_LOGIC;
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_ce : STD_LOGIC;
    signal j_reg_113 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln79_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln81_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln91_fu_260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_62 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal out_data_ce0_local : STD_LOGIC;
    signal out_data_address0_local : STD_LOGIC_VECTOR (9 downto 0);
    signal out_data_we0_local : STD_LOGIC;
    signal bitcast_ln91_1_fu_277_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_139_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_143_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_143_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_15_fu_159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_14_fu_151_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_16_fu_173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_147_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln79_fu_211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_17_fu_230_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln81_fu_235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln91_fu_255_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_139_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal grp_fu_143_p00 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_143_p10 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component convn_valid_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        kernel_w : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln74 : IN STD_LOGIC_VECTOR (61 downto 0);
        empty_8 : IN STD_LOGIC_VECTOR (9 downto 0);
        empty_9 : IN STD_LOGIC_VECTOR (9 downto 0);
        empty_10 : IN STD_LOGIC_VECTOR (4 downto 0);
        empty : IN STD_LOGIC_VECTOR (9 downto 0);
        in_data_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        in_data_ce0 : OUT STD_LOGIC;
        in_data_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        kernel_ce0 : OUT STD_LOGIC;
        kernel_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        sum_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        sum_out_ap_vld : OUT STD_LOGIC;
        grp_fu_139_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_139_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_139_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_139_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_139_p_ce : OUT STD_LOGIC );
    end component;


    component convn_valid_dadd_64ns_64ns_64_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convn_valid_mul_31ns_31ns_62_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (61 downto 0) );
    end component;


    component convn_valid_mul_10s_10s_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124 : component convn_valid_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_start,
        ap_done => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_done,
        ap_idle => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_idle,
        ap_ready => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_ready,
        kernel_w => kernel_w_read_reg_288,
        mul_ln74 => mul_ln74_reg_344,
        empty_8 => trunc_ln79_3_reg_357,
        empty_9 => trunc_ln79_1_reg_334,
        empty_10 => trunc_ln79_reg_299,
        empty => trunc_ln81_reg_375,
        in_data_address0 => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_in_data_address0,
        in_data_ce0 => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_in_data_ce0,
        in_data_q0 => in_data_q0,
        kernel_address0 => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_kernel_address0,
        kernel_ce0 => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_kernel_ce0,
        kernel_q0 => kernel_q0,
        sum_out => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_sum_out,
        sum_out_ap_vld => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_sum_out_ap_vld,
        grp_fu_139_p_din0 => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_din0,
        grp_fu_139_p_din1 => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_din1,
        grp_fu_139_p_opcode => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_opcode,
        grp_fu_139_p_dout0 => grp_fu_139_p2,
        grp_fu_139_p_ce => grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_ce);

    dadd_64ns_64ns_64_8_full_dsp_1_U17 : component convn_valid_dadd_64ns_64ns_64_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_139_p0,
        din1 => grp_fu_139_p1,
        ce => grp_fu_139_ce,
        dout => grp_fu_139_p2);

    mul_31ns_31ns_62_2_1_U18 : component convn_valid_mul_31ns_31ns_62_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_143_p0,
        din1 => grp_fu_143_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_143_p2);

    mul_10s_10s_10_1_1_U19 : component convn_valid_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => empty_17_fu_230_p0,
        din1 => trunc_ln79_2_reg_339,
        dout => empty_17_fu_230_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln81_fu_239_p2 = ap_const_lv1_1))) then 
                    grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_ready = ap_const_logic_1)) then 
                    grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_62_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_62 <= ap_const_lv31_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln81_fu_239_p2 = ap_const_lv1_0))) then 
                i_fu_62 <= add_ln79_reg_352;
            end if; 
        end if;
    end process;

    j_reg_113_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                j_reg_113 <= add_ln81_reg_370;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln79_fu_215_p2 = ap_const_lv1_1))) then 
                j_reg_113 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln79_reg_352 <= add_ln79_fu_220_p2;
                empty_17_reg_362 <= empty_17_fu_230_p2;
                trunc_ln79_3_reg_357 <= trunc_ln79_3_fu_226_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln81_reg_370 <= add_ln81_fu_244_p2;
                out_data_addr_reg_380 <= zext_ln91_fu_260_p1(10 - 1 downto 0);
                trunc_ln81_reg_375 <= trunc_ln81_fu_250_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                add_reg_398 <= grp_fu_139_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                kernel_w_read_reg_288 <= kernel_w;
                smax1_reg_309 <= smax1_fu_179_p3;
                smax_reg_304 <= smax_fu_165_p3;
                trunc_ln79_reg_299 <= trunc_ln79_fu_155_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                mul_ln74_reg_344 <= grp_fu_143_p2;
                out_h_read_reg_324 <= out_h;
                out_w_read_reg_329 <= out_w;
                trunc_ln79_1_reg_334 <= trunc_ln79_1_fu_200_p1;
                trunc_ln79_2_reg_339 <= trunc_ln79_2_fu_204_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                out_data_load_reg_385 <= out_data_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_done, icmp_ln79_fu_215_p2, icmp_ln81_fu_239_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln79_fu_215_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln81_fu_239_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln79_fu_220_p2 <= std_logic_vector(unsigned(i_fu_62) + unsigned(ap_const_lv31_1));
    add_ln81_fu_244_p2 <= std_logic_vector(unsigned(j_reg_113) + unsigned(ap_const_lv31_1));
    add_ln91_fu_255_p2 <= std_logic_vector(unsigned(trunc_ln81_fu_250_p1) + unsigned(empty_17_reg_362));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_done)
    begin
        if ((grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state4, icmp_ln79_fu_215_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln79_fu_215_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, icmp_ln79_fu_215_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln79_fu_215_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln91_1_fu_277_p1 <= add_reg_398;
    bitcast_ln91_fu_273_p1 <= out_data_load_reg_385;
    empty_14_fu_151_p1 <= kernel_h(31 - 1 downto 0);
    empty_15_fu_159_p2 <= "1" when (signed(kernel_h) > signed(ap_const_lv32_0)) else "0";
    empty_16_fu_173_p2 <= "1" when (signed(kernel_w) > signed(ap_const_lv32_0)) else "0";
    empty_17_fu_230_p0 <= i_fu_62(10 - 1 downto 0);
    empty_fu_147_p1 <= kernel_w(31 - 1 downto 0);
    grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_start <= grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_ap_start_reg;

    grp_fu_139_ce_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_fu_139_ce <= grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_ce;
        else 
            grp_fu_139_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_139_p0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, bitcast_ln91_fu_273_p1, ap_CS_fsm_state7, grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_din0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_fu_139_p0 <= grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_139_p0 <= bitcast_ln91_fu_273_p1;
        else 
            grp_fu_139_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_139_p1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_sum_out, grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_din1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_fu_139_p1 <= grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_grp_fu_139_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_139_p1 <= grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_sum_out;
        else 
            grp_fu_139_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_143_p0 <= grp_fu_143_p00(31 - 1 downto 0);
    grp_fu_143_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(smax_reg_304),62));
    grp_fu_143_p1 <= grp_fu_143_p10(31 - 1 downto 0);
    grp_fu_143_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(smax1_reg_309),62));
    icmp_ln79_fu_215_p2 <= "1" when (signed(zext_ln79_fu_211_p1) < signed(out_h_read_reg_324)) else "0";
    icmp_ln81_fu_239_p2 <= "1" when (signed(zext_ln81_fu_235_p1) < signed(out_w_read_reg_329)) else "0";
    in_data_address0 <= grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_in_data_address0;
    in_data_ce0 <= grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_in_data_ce0;
    kernel_address0 <= grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_kernel_address0;
    kernel_ce0 <= grp_convn_valid_Pipeline_VITIS_LOOP_84_3_VITIS_LOOP_86_4_fu_124_kernel_ce0;
    out_data_address0 <= out_data_address0_local;

    out_data_address0_local_assign_proc : process(ap_CS_fsm_state5, out_data_addr_reg_380, ap_CS_fsm_state15, zext_ln91_fu_260_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_address0_local <= out_data_addr_reg_380;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            out_data_address0_local <= zext_ln91_fu_260_p1(10 - 1 downto 0);
        else 
            out_data_address0_local <= "XXXXXXXXXX";
        end if; 
    end process;

    out_data_ce0 <= out_data_ce0_local;

    out_data_ce0_local_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            out_data_ce0_local <= ap_const_logic_1;
        else 
            out_data_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_data_d0 <= bitcast_ln91_1_fu_277_p1;
    out_data_we0 <= out_data_we0_local;

    out_data_we0_local_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_data_we0_local <= ap_const_logic_1;
        else 
            out_data_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    smax1_fu_179_p3 <= 
        empty_fu_147_p1 when (empty_16_fu_173_p2(0) = '1') else 
        ap_const_lv31_0;
    smax_fu_165_p3 <= 
        empty_14_fu_151_p1 when (empty_15_fu_159_p2(0) = '1') else 
        ap_const_lv31_0;
    trunc_ln79_1_fu_200_p1 <= in_w(10 - 1 downto 0);
    trunc_ln79_2_fu_204_p1 <= out_w(10 - 1 downto 0);
    trunc_ln79_3_fu_226_p1 <= i_fu_62(10 - 1 downto 0);
    trunc_ln79_fu_155_p1 <= kernel_w(5 - 1 downto 0);
    trunc_ln81_fu_250_p1 <= j_reg_113(10 - 1 downto 0);
    zext_ln79_fu_211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_62),32));
    zext_ln81_fu_235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_113),32));
    zext_ln91_fu_260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln91_fu_255_p2),64));
end behav;

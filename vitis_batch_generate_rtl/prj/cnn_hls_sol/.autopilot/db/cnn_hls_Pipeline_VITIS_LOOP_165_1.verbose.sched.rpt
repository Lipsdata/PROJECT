

================================================================
== Vitis HLS Report for 'cnn_hls_Pipeline_VITIS_LOOP_165_1'
================================================================
* Date:           Thu Feb 27 14:43:59 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        prj
* Solution:       cnn_hls_sol (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu19p-fsvb3824-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.30 ns|  2.290 ns|     0.89 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |        ?|        ?|         ?|         ?|    0|    0|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_165_1  |        ?|        ?|        26|          2|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 26


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 26
* Pipeline : 1
  Pipeline-0 : II = 2, D = 26, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.55>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [../tutorial_example/source/cnn.h:163->../tutorial_example/source/hls.cpp:141]   --->   Operation 29 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%clear_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %clear"   --->   Operation 30 'read' 'clear_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%sext_ln165_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %sext_ln165"   --->   Operation 31 'read' 'sext_ln165_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp = read i13 @_ssdm_op_Read.ap_auto.i13, i13 %empty"   --->   Operation 32 'read' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%width_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %width"   --->   Operation 33 'read' 'width_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%mul_i_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %mul_i"   --->   Operation 34 'read' 'mul_i_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%sext_ln165_cast = sext i8 %sext_ln165_read"   --->   Operation 35 'sext' 'sext_ln165_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %pixel, i64 666, i64 208, i64 4294967295"   --->   Operation 36 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %sum, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 37 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %pixel, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 38 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.38ns)   --->   "%store_ln163 = store i13 0, i13 %i" [../tutorial_example/source/cnn.h:163->../tutorial_example/source/hls.cpp:141]   --->   Operation 39 'store' 'store_ln163' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body.i94"   --->   Operation 40 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%i_1 = load i13 %i" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 41 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln165_1 = zext i13 %i_1" [../tutorial_example/source/cnn.h:165->../tutorial_example/source/hls.cpp:141]   --->   Operation 42 'zext' 'zext_ln165_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.88ns)   --->   "%icmp_ln165 = icmp_slt  i32 %zext_ln165_1, i32 %mul_i_read" [../tutorial_example/source/cnn.h:165->../tutorial_example/source/hls.cpp:141]   --->   Operation 43 'icmp' 'icmp_ln165' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln165 = br i1 %icmp_ln165, void %_ZN7cnnCore21scalar_matrix_multAddEbc.exit.loopexit.exitStub, void %for.body.i94.split" [../tutorial_example/source/cnn.h:165->../tutorial_example/source/hls.cpp:141]   --->   Operation 44 'br' 'br_ln165' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln166 = br i1 %clear_read, void %for.inc.i, void %if.then.i" [../tutorial_example/source/cnn.h:166->../tutorial_example/source/hls.cpp:141]   --->   Operation 45 'br' 'br_ln166' <Predicate = (icmp_ln165)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln168 = trunc i13 %i_1" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 46 'trunc' 'trunc_ln168' <Predicate = (icmp_ln165)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln168 = zext i12 %trunc_ln168" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 47 'zext' 'zext_ln168' <Predicate = (icmp_ln165)> <Delay = 0.00>
ST_1 : Operation 48 [17/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 48 'sdiv' 'sdiv_ln168' <Predicate = (icmp_ln165)> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 1.64>
ST_2 : Operation 49 [1/1] (0.75ns)   --->   "%add_ln165 = add i13 %i_1, i13 1" [../tutorial_example/source/cnn.h:165->../tutorial_example/source/hls.cpp:141]   --->   Operation 49 'add' 'add_ln165' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln165 = zext i13 %i_1" [../tutorial_example/source/cnn.h:165->../tutorial_example/source/hls.cpp:141]   --->   Operation 50 'zext' 'zext_ln165' <Predicate = (icmp_ln165)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%specpipeline_ln163 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [../tutorial_example/source/cnn.h:163->../tutorial_example/source/hls.cpp:141]   --->   Operation 51 'specpipeline' 'specpipeline_ln163' <Predicate = (icmp_ln165)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%specloopname_ln165 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [../tutorial_example/source/cnn.h:165->../tutorial_example/source/hls.cpp:141]   --->   Operation 52 'specloopname' 'specloopname_ln165' <Predicate = (icmp_ln165)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%sum_addr = getelementptr i32 %sum, i64 0, i64 %zext_ln165" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 53 'getelementptr' 'sum_addr' <Predicate = (icmp_ln165)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] ( I:1.64ns O:1.64ns )   --->   "%store_ln167 = store i32 0, i12 %sum_addr" [../tutorial_example/source/cnn.h:167->../tutorial_example/source/hls.cpp:141]   --->   Operation 54 'store' 'store_ln167' <Predicate = (icmp_ln165 & clear_read)> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln167 = br void %for.inc.i" [../tutorial_example/source/cnn.h:167->../tutorial_example/source/hls.cpp:141]   --->   Operation 55 'br' 'br_ln167' <Predicate = (icmp_ln165 & clear_read)> <Delay = 0.00>
ST_2 : Operation 56 [16/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 56 'sdiv' 'sdiv_ln168' <Predicate = (icmp_ln165)> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [17/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 57 'srem' 'srem_ln168' <Predicate = (icmp_ln165)> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.38ns)   --->   "%store_ln163 = store i13 %add_ln165, i13 %i" [../tutorial_example/source/cnn.h:163->../tutorial_example/source/hls.cpp:141]   --->   Operation 58 'store' 'store_ln163' <Predicate = (icmp_ln165)> <Delay = 0.38>

State 3 <SV = 2> <Delay = 1.16>
ST_3 : Operation 59 [15/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 59 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [16/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 60 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 1.16>
ST_4 : Operation 61 [14/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 61 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [15/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 62 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 1.16>
ST_5 : Operation 63 [13/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 63 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [14/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 64 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 1.16>
ST_6 : Operation 65 [12/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 65 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 66 [13/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 66 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 1.16>
ST_7 : Operation 67 [11/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 67 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 68 [12/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 68 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 1.16>
ST_8 : Operation 69 [10/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 69 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 70 [11/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 70 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 1.16>
ST_9 : Operation 71 [9/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 71 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 72 [10/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 72 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 1.16>
ST_10 : Operation 73 [8/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 73 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 74 [9/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 74 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 1.16>
ST_11 : Operation 75 [7/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 75 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 76 [8/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 76 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 1.16>
ST_12 : Operation 77 [6/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 77 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 78 [7/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 78 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 1.16>
ST_13 : Operation 79 [5/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 79 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 80 [6/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 80 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 1.16>
ST_14 : Operation 81 [4/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 81 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 82 [5/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 82 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 1.16>
ST_15 : Operation 83 [3/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 83 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 84 [4/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 84 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 1.16>
ST_16 : Operation 85 [2/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 85 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 86 [3/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 86 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 2.16>
ST_17 : Operation 87 [1/17] (1.16ns)   --->   "%sdiv_ln168 = sdiv i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 87 'sdiv' 'sdiv_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 88 [1/1] (0.00ns)   --->   "%trunc_ln168_1 = trunc i13 %sdiv_ln168" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 88 'trunc' 'trunc_ln168_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 89 [3/3] (0.99ns) (grouped into DSP with root node add_ln168)   --->   "%mul_ln168 = mul i13 %trunc_ln168_1, i13 %tmp" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 89 'mul' 'mul_ln168' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 90 [2/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 90 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 1.16>
ST_18 : Operation 91 [2/3] (0.99ns) (grouped into DSP with root node add_ln168)   --->   "%mul_ln168 = mul i13 %trunc_ln168_1, i13 %tmp" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 91 'mul' 'mul_ln168' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 92 [1/17] (1.16ns)   --->   "%srem_ln168 = srem i32 %zext_ln168, i32 %width_read" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 92 'srem' 'srem_ln168' <Predicate = true> <Delay = 1.16> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 16> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 0.64>
ST_19 : Operation 93 [1/3] (0.00ns) (grouped into DSP with root node add_ln168)   --->   "%mul_ln168 = mul i13 %trunc_ln168_1, i13 %tmp" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 93 'mul' 'mul_ln168' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_19 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln168_2 = trunc i13 %srem_ln168" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 94 'trunc' 'trunc_ln168_2' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 95 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln168 = add i13 %mul_ln168, i13 %trunc_ln168_2" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 95 'add' 'add_ln168' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 20 <SV = 19> <Delay = 1.89>
ST_20 : Operation 96 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln168 = add i13 %mul_ln168, i13 %trunc_ln168_2" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 96 'add' 'add_ln168' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln168_1 = zext i13 %add_ln168" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 97 'zext' 'zext_ln168_1' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 98 [1/1] (0.00ns)   --->   "%pixel_addr = getelementptr i8 %pixel, i64 0, i64 %zext_ln168_1" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 98 'getelementptr' 'pixel_addr' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 99 [2/2] (1.24ns)   --->   "%pixel_load = load i13 %pixel_addr" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 99 'load' 'pixel_load' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>

State 21 <SV = 20> <Delay = 1.24>
ST_21 : Operation 100 [1/2] ( I:1.24ns O:1.24ns )   --->   "%pixel_load = load i13 %pixel_addr" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 100 'load' 'pixel_load' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>

State 22 <SV = 21> <Delay = 0.99>
ST_22 : Operation 101 [1/1] (0.00ns)   --->   "%sext_ln168 = sext i8 %pixel_load" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 101 'sext' 'sext_ln168' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 102 [3/3] (0.99ns) (grouped into DSP with root node add_ln168_1)   --->   "%mul_ln168_1 = mul i16 %sext_ln168, i16 %sext_ln165_cast" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 102 'mul' 'mul_ln168_1' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 23 <SV = 22> <Delay = 0.99>
ST_23 : Operation 103 [2/3] (0.99ns) (grouped into DSP with root node add_ln168_1)   --->   "%mul_ln168_1 = mul i16 %sext_ln168, i16 %sext_ln165_cast" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 103 'mul' 'mul_ln168_1' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_23 : Operation 104 [2/2] (1.64ns)   --->   "%sum_load = load i12 %sum_addr" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 104 'load' 'sum_load' <Predicate = true> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>

State 24 <SV = 23> <Delay = 2.29>
ST_24 : Operation 105 [1/3] (0.00ns) (grouped into DSP with root node add_ln168_1)   --->   "%mul_ln168_1 = mul i16 %sext_ln168, i16 %sext_ln165_cast" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 105 'mul' 'mul_ln168_1' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 106 [1/1] (0.00ns) (grouped into DSP with root node add_ln168_1)   --->   "%sext_ln168_1 = sext i16 %mul_ln168_1" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 106 'sext' 'sext_ln168_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 107 [1/2] ( I:1.64ns O:1.64ns )   --->   "%sum_load = load i12 %sum_addr" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 107 'load' 'sum_load' <Predicate = true> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_24 : Operation 108 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln168_1 = add i32 %sum_load, i32 %sext_ln168_1" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 108 'add' 'add_ln168_1' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 112 [1/1] (0.38ns)   --->   "%ret_ln0 = ret"   --->   Operation 112 'ret' 'ret_ln0' <Predicate = (!icmp_ln165)> <Delay = 0.38>

State 25 <SV = 24> <Delay = 0.64>
ST_25 : Operation 109 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln168_1 = add i32 %sum_load, i32 %sext_ln168_1" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 109 'add' 'add_ln168_1' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 26 <SV = 25> <Delay = 1.64>
ST_26 : Operation 110 [1/1] ( I:1.64ns O:1.64ns )   --->   "%store_ln168 = store i32 %add_ln168_1, i12 %sum_addr" [../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141]   --->   Operation 110 'store' 'store_ln168' <Predicate = true> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4096> <RAM>
ST_26 : Operation 111 [1/1] (0.00ns)   --->   "%br_ln165 = br void %for.body.i94" [../tutorial_example/source/cnn.h:165->../tutorial_example/source/hls.cpp:141]   --->   Operation 111 'br' 'br_ln165' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.300ns, clock uncertainty: 0.891ns.

 <State 1>: 1.552ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln163', ../tutorial_example/source/cnn.h:163->../tutorial_example/source/hls.cpp:141) of constant 0 on local variable 'i', ../tutorial_example/source/cnn.h:163->../tutorial_example/source/hls.cpp:141 [18]  (0.387 ns)
	'load' operation 13 bit ('i', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) on local variable 'i', ../tutorial_example/source/cnn.h:163->../tutorial_example/source/hls.cpp:141 [21]  (0.000 ns)
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 2>: 1.645ns
The critical path consists of the following:
	'getelementptr' operation 12 bit ('sum_addr', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [30]  (0.000 ns)
	'store' operation 0 bit ('store_ln167', ../tutorial_example/source/cnn.h:167->../tutorial_example/source/hls.cpp:141) of constant 0 on array 'sum' [33]  (1.645 ns)

 <State 3>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 4>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 5>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 6>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 7>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 8>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 9>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 10>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 11>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 12>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 13>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 14>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 15>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 16>: 1.165ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)

 <State 17>: 2.161ns
The critical path consists of the following:
	'sdiv' operation 13 bit ('sdiv_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [38]  (1.165 ns)
	'mul' operation 13 bit of DSP[43] ('mul_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [40]  (0.996 ns)

 <State 18>: 1.165ns
The critical path consists of the following:
	'srem' operation 13 bit ('srem_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [41]  (1.165 ns)

 <State 19>: 0.645ns
The critical path consists of the following:
	'mul' operation 13 bit of DSP[43] ('mul_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [40]  (0.000 ns)
	'add' operation 13 bit of DSP[43] ('add_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [43]  (0.645 ns)

 <State 20>: 1.893ns
The critical path consists of the following:
	'add' operation 13 bit of DSP[43] ('add_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [43]  (0.645 ns)
	'getelementptr' operation 13 bit ('pixel_addr', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [45]  (0.000 ns)
	'load' operation 8 bit ('pixel_load', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) on array 'pixel' [46]  (1.248 ns)

 <State 21>: 1.248ns
The critical path consists of the following:
	'load' operation 8 bit ('pixel_load', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) on array 'pixel' [46]  (1.248 ns)

 <State 22>: 0.996ns
The critical path consists of the following:
	'mul' operation 16 bit of DSP[51] ('mul_ln168_1', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [48]  (0.996 ns)

 <State 23>: 0.996ns
The critical path consists of the following:
	'mul' operation 16 bit of DSP[51] ('mul_ln168_1', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [48]  (0.996 ns)

 <State 24>: 2.290ns
The critical path consists of the following:
	'load' operation 32 bit ('sum_load', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) on array 'sum' [50]  (1.645 ns)
	'add' operation 32 bit of DSP[51] ('add_ln168_1', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [51]  (0.645 ns)

 <State 25>: 0.645ns
The critical path consists of the following:
	'add' operation 32 bit of DSP[51] ('add_ln168_1', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) [51]  (0.645 ns)

 <State 26>: 1.645ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln168', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141) of variable 'add_ln168_1', ../tutorial_example/source/cnn.h:168->../tutorial_example/source/hls.cpp:141 on array 'sum' [52]  (1.645 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

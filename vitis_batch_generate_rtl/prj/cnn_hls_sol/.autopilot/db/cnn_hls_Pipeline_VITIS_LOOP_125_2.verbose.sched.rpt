

================================================================
== Vitis HLS Report for 'cnn_hls_Pipeline_VITIS_LOOP_125_2'
================================================================
* Date:           Thu Feb 27 14:43:59 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        prj
* Solution:       cnn_hls_sol (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu19p-fsvb3824-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.30 ns|  2.390 ns|     0.89 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |        ?|        ?|         ?|         ?|    0|    0|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_125_2  |        ?|        ?|         3|          1|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.39>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%x = alloca i32 1" [../tutorial_example/source/cnn.h:116->../tutorial_example/source/hls.cpp:147]   --->   Operation 6 'alloca' 'x' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %pixel, i64 666, i64 208, i64 4294967295"   --->   Operation 7 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %pixel, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%mul_ln124_read = read i13 @_ssdm_op_Read.ap_auto.i13, i13 %mul_ln124"   --->   Operation 9 'read' 'mul_ln124_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%core_rwidth_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %core_rwidth"   --->   Operation 10 'read' 'core_rwidth_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.38ns)   --->   "%store_ln116 = store i31 1, i31 %x" [../tutorial_example/source/cnn.h:116->../tutorial_example/source/hls.cpp:147]   --->   Operation 11 'store' 'store_ln116' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body5.i"   --->   Operation 12 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%x_1 = load i31 %x" [../tutorial_example/source/cnn.h:125->../tutorial_example/source/hls.cpp:147]   --->   Operation 13 'load' 'x_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln125 = zext i31 %x_1" [../tutorial_example/source/cnn.h:125->../tutorial_example/source/hls.cpp:147]   --->   Operation 14 'zext' 'zext_ln125' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.88ns)   --->   "%icmp_ln125 = icmp_slt  i32 %zext_ln125, i32 %core_rwidth_read" [../tutorial_example/source/cnn.h:125->../tutorial_example/source/hls.cpp:147]   --->   Operation 15 'icmp' 'icmp_ln125' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln125 = br i1 %icmp_ln125, void %for.end.i.loopexit.exitStub, void %for.body5.i.split" [../tutorial_example/source/cnn.h:125->../tutorial_example/source/hls.cpp:147]   --->   Operation 16 'br' 'br_ln125' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln125 = trunc i31 %x_1" [../tutorial_example/source/cnn.h:125->../tutorial_example/source/hls.cpp:147]   --->   Operation 17 'trunc' 'trunc_ln125' <Predicate = (icmp_ln125)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.75ns)   --->   "%add_ln126 = add i13 %trunc_ln125, i13 %mul_ln124_read" [../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147]   --->   Operation 18 'add' 'add_ln126' <Predicate = (icmp_ln125)> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln126 = zext i13 %add_ln126" [../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147]   --->   Operation 19 'zext' 'zext_ln126' <Predicate = (icmp_ln125)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%pixel_addr = getelementptr i8 %pixel, i64 0, i64 %zext_ln126" [../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147]   --->   Operation 20 'getelementptr' 'pixel_addr' <Predicate = (icmp_ln125)> <Delay = 0.00>
ST_1 : Operation 21 [2/2] (1.24ns)   --->   "%pixel_load = load i13 %pixel_addr" [../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147]   --->   Operation 21 'load' 'pixel_load' <Predicate = (icmp_ln125)> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_1 : Operation 22 [1/1] (0.75ns)   --->   "%add_ln126_1 = add i13 %add_ln126, i13 8191" [../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147]   --->   Operation 22 'add' 'add_ln126_1' <Predicate = (icmp_ln125)> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.87ns)   --->   "%add_ln125 = add i31 %x_1, i31 1" [../tutorial_example/source/cnn.h:125->../tutorial_example/source/hls.cpp:147]   --->   Operation 23 'add' 'add_ln125' <Predicate = (icmp_ln125)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.38ns)   --->   "%store_ln116 = store i31 %add_ln125, i31 %x" [../tutorial_example/source/cnn.h:116->../tutorial_example/source/hls.cpp:147]   --->   Operation 24 'store' 'store_ln116' <Predicate = (icmp_ln125)> <Delay = 0.38>

State 2 <SV = 1> <Delay = 1.24>
ST_2 : Operation 25 [1/2] ( I:1.24ns O:1.24ns )   --->   "%pixel_load = load i13 %pixel_addr" [../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147]   --->   Operation 25 'load' 'pixel_load' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_2 : Operation 32 [1/1] (0.38ns)   --->   "%ret_ln0 = ret"   --->   Operation 32 'ret' 'ret_ln0' <Predicate = (!icmp_ln125)> <Delay = 0.38>

State 3 <SV = 2> <Delay = 1.24>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%specpipeline_ln116 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [../tutorial_example/source/cnn.h:116->../tutorial_example/source/hls.cpp:147]   --->   Operation 26 'specpipeline' 'specpipeline_ln116' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%specloopname_ln125 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [../tutorial_example/source/cnn.h:125->../tutorial_example/source/hls.cpp:147]   --->   Operation 27 'specloopname' 'specloopname_ln125' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln126_1 = zext i13 %add_ln126_1" [../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147]   --->   Operation 28 'zext' 'zext_ln126_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%pixel_addr_2 = getelementptr i8 %pixel, i64 0, i64 %zext_ln126_1" [../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147]   --->   Operation 29 'getelementptr' 'pixel_addr_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] ( I:1.24ns O:1.24ns )   --->   "%store_ln126 = store i8 %pixel_load, i13 %pixel_addr_2" [../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147]   --->   Operation 30 'store' 'store_ln126' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln125 = br void %for.body5.i" [../tutorial_example/source/cnn.h:125->../tutorial_example/source/hls.cpp:147]   --->   Operation 31 'br' 'br_ln125' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.300ns, clock uncertainty: 0.891ns.

 <State 1>: 2.390ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln116', ../tutorial_example/source/cnn.h:116->../tutorial_example/source/hls.cpp:147) of constant 1 on local variable 'x', ../tutorial_example/source/cnn.h:116->../tutorial_example/source/hls.cpp:147 [9]  (0.387 ns)
	'load' operation 31 bit ('x', ../tutorial_example/source/cnn.h:125->../tutorial_example/source/hls.cpp:147) on local variable 'x', ../tutorial_example/source/cnn.h:116->../tutorial_example/source/hls.cpp:147 [12]  (0.000 ns)
	'add' operation 13 bit ('add_ln126', ../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147) [20]  (0.755 ns)
	'getelementptr' operation 13 bit ('pixel_addr', ../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147) [22]  (0.000 ns)
	'load' operation 8 bit ('pixel_load', ../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147) on array 'pixel' [23]  (1.248 ns)

 <State 2>: 1.248ns
The critical path consists of the following:
	'load' operation 8 bit ('pixel_load', ../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147) on array 'pixel' [23]  (1.248 ns)

 <State 3>: 1.248ns
The critical path consists of the following:
	'getelementptr' operation 13 bit ('pixel_addr_2', ../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147) [26]  (0.000 ns)
	'store' operation 0 bit ('store_ln126', ../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147) of variable 'pixel_load', ../tutorial_example/source/cnn.h:126->../tutorial_example/source/hls.cpp:147 on array 'pixel' [27]  (1.248 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

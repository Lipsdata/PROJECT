

================================================================
== Vitis HLS Report for 'cnn_hls_Pipeline_VITIS_LOOP_153_2'
================================================================
* Date:           Thu Feb 27 14:43:59 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        prj
* Solution:       cnn_hls_sol (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu19p-fsvb3824-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.30 ns|  2.257 ns|     0.89 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |        ?|        ?|         ?|         ?|    0|    0|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_153_2  |        ?|        ?|         6|          2|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 2, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.25>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%reuse_addr_reg = alloca i32 1"   --->   Operation 9 'alloca' 'reuse_addr_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%reuse_reg = alloca i32 1"   --->   Operation 10 'alloca' 'reuse_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%phi_mul = alloca i32 1"   --->   Operation 11 'alloca' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%y = alloca i32 1" [../tutorial_example/source/cnn.h:150->../tutorial_example/source/hls.cpp:152]   --->   Operation 12 'alloca' 'y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %pixel, i64 666, i64 208, i64 4294967295"   --->   Operation 13 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %pixel, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp = read i13 @_ssdm_op_Read.ap_auto.i13, i13 %empty"   --->   Operation 15 'read' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_1 = read i13 @_ssdm_op_Read.ap_auto.i13, i13 %empty_14"   --->   Operation 16 'read' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sub_i11_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %sub_i11"   --->   Operation 17 'read' 'sub_i11_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.38ns)   --->   "%store_ln150 = store i31 0, i31 %y" [../tutorial_example/source/cnn.h:150->../tutorial_example/source/hls.cpp:152]   --->   Operation 18 'store' 'store_ln150' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 19 [1/1] (0.38ns)   --->   "%store_ln0 = store i13 0, i13 %phi_mul"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 20 [1/1] (0.38ns)   --->   "%store_ln0 = store i8 0, i8 %reuse_reg"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 21 [1/1] (0.38ns)   --->   "%store_ln0 = store i64 18446744073709551615, i64 %reuse_addr_reg"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body4.i"   --->   Operation 22 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%y_1 = load i31 %y" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 23 'load' 'y_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln153 = zext i31 %y_1" [../tutorial_example/source/cnn.h:153->../tutorial_example/source/hls.cpp:152]   --->   Operation 24 'zext' 'zext_ln153' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.88ns)   --->   "%icmp_ln153 = icmp_slt  i32 %zext_ln153, i32 %sub_i11_read" [../tutorial_example/source/cnn.h:153->../tutorial_example/source/hls.cpp:152]   --->   Operation 25 'icmp' 'icmp_ln153' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.87ns)   --->   "%add_ln154 = add i31 %y_1, i31 1" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 26 'add' 'add_ln154' <Predicate = true> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln153 = br i1 %icmp_ln153, void %for.end.i17.loopexit.exitStub, void %for.body4.i.split" [../tutorial_example/source/cnn.h:153->../tutorial_example/source/hls.cpp:152]   --->   Operation 27 'br' 'br_ln153' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln154 = trunc i31 %add_ln154" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 28 'trunc' 'trunc_ln154' <Predicate = (icmp_ln153)> <Delay = 0.00>
ST_1 : Operation 29 [3/3] (0.99ns) (grouped into DSP with root node add_ln154_1)   --->   "%mul_ln154 = mul i13 %trunc_ln154, i13 %tmp_1" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 29 'mul' 'mul_ln154' <Predicate = (icmp_ln153)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 30 [1/1] (0.38ns)   --->   "%store_ln150 = store i31 %add_ln154, i31 %y" [../tutorial_example/source/cnn.h:150->../tutorial_example/source/hls.cpp:152]   --->   Operation 30 'store' 'store_ln150' <Predicate = (icmp_ln153)> <Delay = 0.38>

State 2 <SV = 1> <Delay = 0.99>
ST_2 : Operation 31 [2/3] (0.99ns) (grouped into DSP with root node add_ln154_1)   --->   "%mul_ln154 = mul i13 %trunc_ln154, i13 %tmp_1" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 31 'mul' 'mul_ln154' <Predicate = (icmp_ln153)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 0.64>
ST_3 : Operation 32 [1/3] (0.00ns) (grouped into DSP with root node add_ln154_1)   --->   "%mul_ln154 = mul i13 %trunc_ln154, i13 %tmp_1" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 32 'mul' 'mul_ln154' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 33 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln154_1 = add i13 %mul_ln154, i13 %tmp" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 33 'add' 'add_ln154_1' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 1.89>
ST_4 : Operation 34 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln154_1 = add i13 %mul_ln154, i13 %tmp" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 34 'add' 'add_ln154_1' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln154 = zext i13 %add_ln154_1" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 35 'zext' 'zext_ln154' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%pixel_addr = getelementptr i8 %pixel, i64 0, i64 %zext_ln154" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 36 'getelementptr' 'pixel_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [2/2] (1.24ns)   --->   "%pixel_load = load i13 %pixel_addr" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 37 'load' 'pixel_load' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_4 : Operation 55 [1/1] (0.38ns)   --->   "%ret_ln0 = ret"   --->   Operation 55 'ret' 'ret_ln0' <Predicate = (!icmp_ln153)> <Delay = 0.38>

State 5 <SV = 4> <Delay = 1.93>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%reuse_reg_load = load i8 %reuse_reg"   --->   Operation 38 'load' 'reuse_reg_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%reuse_addr_reg_load = load i64 %reuse_addr_reg"   --->   Operation 39 'load' 'reuse_addr_reg_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 40 [1/2] ( I:1.24ns O:1.24ns )   --->   "%pixel_load = load i13 %pixel_addr" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 40 'load' 'pixel_load' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_5 : Operation 41 [1/1] (1.14ns)   --->   "%addr_cmp = icmp_eq  i64 %reuse_addr_reg_load, i64 %zext_ln154" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 41 'icmp' 'addr_cmp' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 42 [1/1] (0.30ns)   --->   "%reuse_select = select i1 %addr_cmp, i8 %reuse_reg_load, i8 %pixel_load" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 42 'select' 'reuse_select' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 43 [1/1] (0.38ns)   --->   "%store_ln154 = store i8 %reuse_select, i8 %reuse_reg" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 43 'store' 'store_ln154' <Predicate = true> <Delay = 0.38>

State 6 <SV = 5> <Delay = 2.00>
ST_6 : Operation 44 [1/1] (0.00ns)   --->   "%phi_mul_load = load i13 %phi_mul" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 44 'load' 'phi_mul_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 45 [1/1] (0.00ns)   --->   "%specpipeline_ln150 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [../tutorial_example/source/cnn.h:150->../tutorial_example/source/hls.cpp:152]   --->   Operation 45 'specpipeline' 'specpipeline_ln150' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 46 [1/1] (0.00ns)   --->   "%specloopname_ln153 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [../tutorial_example/source/cnn.h:153->../tutorial_example/source/hls.cpp:152]   --->   Operation 46 'specloopname' 'specloopname_ln153' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 47 [1/1] (0.75ns)   --->   "%add_ln154_3 = add i13 %phi_mul_load, i13 %tmp_1" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 47 'add' 'add_ln154_3' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 48 [1/1] (0.75ns)   --->   "%add_ln154_2 = add i13 %phi_mul_load, i13 %tmp" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 48 'add' 'add_ln154_2' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln154_1 = zext i13 %add_ln154_2" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 49 'zext' 'zext_ln154_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 50 [1/1] (0.00ns)   --->   "%pixel_addr_1 = getelementptr i8 %pixel, i64 0, i64 %zext_ln154_1" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 50 'getelementptr' 'pixel_addr_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 51 [1/1] ( I:1.24ns O:1.24ns )   --->   "%store_ln154 = store i8 %reuse_select, i13 %pixel_addr_1" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 51 'store' 'store_ln154' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_6 : Operation 52 [1/1] (0.38ns)   --->   "%store_ln154 = store i64 %zext_ln154_1, i64 %reuse_addr_reg" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 52 'store' 'store_ln154' <Predicate = true> <Delay = 0.38>
ST_6 : Operation 53 [1/1] (0.38ns)   --->   "%store_ln154 = store i13 %add_ln154_3, i13 %phi_mul" [../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152]   --->   Operation 53 'store' 'store_ln154' <Predicate = true> <Delay = 0.38>
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln153 = br void %for.body4.i" [../tutorial_example/source/cnn.h:153->../tutorial_example/source/hls.cpp:152]   --->   Operation 54 'br' 'br_ln153' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.300ns, clock uncertainty: 0.891ns.

 <State 1>: 2.257ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln150', ../tutorial_example/source/cnn.h:150->../tutorial_example/source/hls.cpp:152) of constant 0 on local variable 'y', ../tutorial_example/source/cnn.h:150->../tutorial_example/source/hls.cpp:152 [14]  (0.387 ns)
	'load' operation 31 bit ('y', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) on local variable 'y', ../tutorial_example/source/cnn.h:150->../tutorial_example/source/hls.cpp:152 [20]  (0.000 ns)
	'add' operation 31 bit ('add_ln154', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) [23]  (0.874 ns)
	'mul' operation 13 bit of DSP[31] ('mul_ln154', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) [30]  (0.996 ns)

 <State 2>: 0.996ns
The critical path consists of the following:
	'mul' operation 13 bit of DSP[31] ('mul_ln154', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) [30]  (0.996 ns)

 <State 3>: 0.645ns
The critical path consists of the following:
	'mul' operation 13 bit of DSP[31] ('mul_ln154', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) [30]  (0.000 ns)
	'add' operation 13 bit of DSP[31] ('add_ln154_1', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) [31]  (0.645 ns)

 <State 4>: 1.893ns
The critical path consists of the following:
	'add' operation 13 bit of DSP[31] ('add_ln154_1', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) [31]  (0.645 ns)
	'getelementptr' operation 13 bit ('pixel_addr', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) [33]  (0.000 ns)
	'load' operation 8 bit ('pixel_load', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) on array 'pixel' [36]  (1.248 ns)

 <State 5>: 1.938ns
The critical path consists of the following:
	'load' operation 8 bit ('pixel_load', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) on array 'pixel' [36]  (1.248 ns)
	'select' operation 8 bit ('reuse_select', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) [38]  (0.303 ns)
	'store' operation 0 bit ('store_ln154', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) of variable 'reuse_select', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152 on local variable 'reuse_reg' [44]  (0.387 ns)

 <State 6>: 2.003ns
The critical path consists of the following:
	'load' operation 13 bit ('phi_mul_load', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) on local variable 'phi_mul' [26]  (0.000 ns)
	'add' operation 13 bit ('add_ln154_2', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) [40]  (0.755 ns)
	'getelementptr' operation 13 bit ('pixel_addr_1', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) [42]  (0.000 ns)
	'store' operation 0 bit ('store_ln154', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152) of variable 'reuse_select', ../tutorial_example/source/cnn.h:154->../tutorial_example/source/hls.cpp:152 on array 'pixel' [43]  (1.248 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

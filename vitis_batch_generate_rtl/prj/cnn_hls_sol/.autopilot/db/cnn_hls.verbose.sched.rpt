

================================================================
== Vitis HLS Report for 'cnn_hls'
================================================================
* Date:           Thu Feb 27 14:43:59 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        prj
* Solution:       cnn_hls_sol (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu19p-fsvb3824-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.30 ns|  2.390 ns|     0.89 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_139_1   |        ?|        ?|         ?|          -|          -|     ?|        no|
        | + VITIS_LOOP_123_1  |        ?|        ?|         ?|          -|          -|     ?|        no|
        | + VITIS_LOOP_103_1  |        ?|        ?|         ?|          -|          -|     ?|        no|
        | + VITIS_LOOP_151_1  |        ?|        ?|         ?|          -|          -|     ?|        no|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 22
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 14 18 3 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 9 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 9 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 9 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.29>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 23 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%r0 = alloca i32 1" [../tutorial_example/source/hls.cpp:130]   --->   Operation 24 'alloca' 'r0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%c0 = alloca i32 1" [../tutorial_example/source/hls.cpp:130]   --->   Operation 25 'alloca' 'c0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%target_1 = alloca i32 1" [../tutorial_example/source/hls.cpp:130]   --->   Operation 26 'alloca' 'target_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%filter_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %filter" [../tutorial_example/source/hls.cpp:117]   --->   Operation 27 'read' 'filter_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%height_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %height" [../tutorial_example/source/hls.cpp:117]   --->   Operation 28 'read' 'height_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%width_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %width" [../tutorial_example/source/hls.cpp:117]   --->   Operation 29 'read' 'width_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln117 = trunc i32 %filter_read" [../tutorial_example/source/hls.cpp:117]   --->   Operation 30 'trunc' 'trunc_ln117' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.88ns)   --->   "%target = add i32 %filter_read, i32 4294967295" [../tutorial_example/source/cnn.h:74->../tutorial_example/source/hls.cpp:134]   --->   Operation 31 'add' 'target' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.88ns)   --->   "%core_rwidth = add i32 %target, i32 %width_read" [../tutorial_example/source/cnn.h:74->../tutorial_example/source/hls.cpp:134]   --->   Operation 32 'add' 'core_rwidth' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%trunc_ln132 = trunc i32 %core_rwidth" [../tutorial_example/source/hls.cpp:132]   --->   Operation 33 'trunc' 'trunc_ln132' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.88ns)   --->   "%add_ln75 = add i32 %filter_read, i32 %height_read" [../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134]   --->   Operation 34 'add' 'add_ln75' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [2/2] (2.29ns)   --->   "%mul = mul i32 %filter_read, i32 %filter_read" [../tutorial_example/source/hls.cpp:117]   --->   Operation 35 'mul' 'mul' <Predicate = true> <Delay = 2.29> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [2/2] (2.29ns)   --->   "%mul_i = mul i32 %height_read, i32 %width_read" [../tutorial_example/source/hls.cpp:117]   --->   Operation 36 'mul' 'mul_i' <Predicate = true> <Delay = 2.29> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.88ns)   --->   "%sub_i11 = add i32 %add_ln75, i32 4294967294" [../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134]   --->   Operation 37 'add' 'sub_i11' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%empty = trunc i32 %sub_i11" [../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134]   --->   Operation 38 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.41ns)   --->   "%store_ln130 = store i32 %target, i32 %target_1" [../tutorial_example/source/hls.cpp:130]   --->   Operation 39 'store' 'store_ln130' <Predicate = true> <Delay = 0.41>
ST_1 : Operation 40 [1/1] (0.38ns)   --->   "%store_ln130 = store i32 0, i32 %c0" [../tutorial_example/source/hls.cpp:130]   --->   Operation 40 'store' 'store_ln130' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 41 [1/1] (0.45ns)   --->   "%store_ln130 = store i32 0, i32 %r0" [../tutorial_example/source/hls.cpp:130]   --->   Operation 41 'store' 'store_ln130' <Predicate = true> <Delay = 0.45>
ST_1 : Operation 42 [1/1] (0.38ns)   --->   "%store_ln0 = store i31 0, i31 %i"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>

State 2 <SV = 1> <Delay = 2.29>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%spectopmodule_ln117 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2" [../tutorial_example/source/hls.cpp:117]   --->   Operation 43 'spectopmodule' 'spectopmodule_ln117' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ap_core"   --->   Operation 44 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ap_core, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 45 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ap_part"   --->   Operation 46 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ap_part, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 47 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ap_parent"   --->   Operation 48 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ap_parent, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 49 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %width"   --->   Operation 50 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %width, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 51 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %height"   --->   Operation 52 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %height, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 53 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %filter"   --->   Operation 54 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %filter, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 55 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %pixel, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 56 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %pixel, i64 666, i64 208, i64 4294967295"   --->   Operation 57 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %pixel"   --->   Operation 58 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %filter_map, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 59 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %filter_map"   --->   Operation 60 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %sum, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 61 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %sum"   --->   Operation 62 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.88ns)   --->   "%core_rheight = add i32 %add_ln75, i32 4294967295" [../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134]   --->   Operation 63 'add' 'core_rheight' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/2] (2.29ns)   --->   "%mul = mul i32 %filter_read, i32 %filter_read" [../tutorial_example/source/hls.cpp:117]   --->   Operation 64 'mul' 'mul' <Predicate = true> <Delay = 2.29> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/2] (2.29ns)   --->   "%mul_i = mul i32 %height_read, i32 %width_read" [../tutorial_example/source/hls.cpp:117]   --->   Operation 65 'mul' 'mul_i' <Predicate = true> <Delay = 2.29> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 2.29> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.88ns)   --->   "%y_1 = add i32 %add_ln75, i32 4294967293" [../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134]   --->   Operation 66 'add' 'y_1' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (1.89ns)   --->   "%mul_ln139 = mul i13 %empty, i13 %trunc_ln132" [../tutorial_example/source/hls.cpp:139]   --->   Operation 67 'mul' 'mul_ln139' <Predicate = true> <Delay = 1.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.75ns)   --->   "%add_ln128 = add i13 %trunc_ln132, i13 8191" [../tutorial_example/source/cnn.h:128->../tutorial_example/source/hls.cpp:147]   --->   Operation 68 'add' 'add_ln128' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.38ns)   --->   "%br_ln139 = br void %for.body" [../tutorial_example/source/hls.cpp:139]   --->   Operation 69 'br' 'br_ln139' <Predicate = true> <Delay = 0.38>

State 3 <SV = 2> <Delay = 0.99>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%clear = phi i1 1, void %entry, i1 0, void %for.inc"   --->   Operation 70 'phi' 'clear' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%i_load = load i31 %i" [../tutorial_example/source/hls.cpp:139]   --->   Operation 71 'load' 'i_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%target_2 = load i32 %target_1"   --->   Operation 72 'load' 'target_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln139 = zext i31 %i_load" [../tutorial_example/source/hls.cpp:139]   --->   Operation 73 'zext' 'zext_ln139' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.88ns)   --->   "%icmp_ln139 = icmp_slt  i32 %zext_ln139, i32 %mul" [../tutorial_example/source/hls.cpp:139]   --->   Operation 74 'icmp' 'icmp_ln139' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.87ns)   --->   "%add_ln139 = add i31 %i_load, i31 1" [../tutorial_example/source/hls.cpp:139]   --->   Operation 75 'add' 'add_ln139' <Predicate = true> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%br_ln139 = br i1 %icmp_ln139, void %for.end.loopexit, void %for.body.split" [../tutorial_example/source/hls.cpp:139]   --->   Operation 76 'br' 'br_ln139' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%r0_load = load i32 %r0" [../tutorial_example/source/hls.cpp:139]   --->   Operation 77 'load' 'r0_load' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln139_1 = trunc i32 %r0_load" [../tutorial_example/source/hls.cpp:139]   --->   Operation 78 'trunc' 'trunc_ln139_1' <Predicate = (icmp_ln139)> <Delay = 0.00>
ST_3 : Operation 79 [3/3] (0.99ns) (grouped into DSP with root node add_ln141)   --->   "%mul_ln141 = mul i6 %trunc_ln139_1, i6 %trunc_ln117" [../tutorial_example/source/hls.cpp:141]   --->   Operation 79 'mul' 'mul_ln141' <Predicate = (icmp_ln139)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 80 [1/1] (0.88ns)   --->   "%icmp_ln144 = icmp_eq  i32 %r0_load, i32 %target_2" [../tutorial_example/source/hls.cpp:144]   --->   Operation 80 'icmp' 'icmp_ln144' <Predicate = (icmp_ln139)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%ret_ln157 = ret" [../tutorial_example/source/hls.cpp:157]   --->   Operation 81 'ret' 'ret_ln157' <Predicate = (!icmp_ln139)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 0.99>
ST_4 : Operation 82 [2/3] (0.99ns) (grouped into DSP with root node add_ln141)   --->   "%mul_ln141 = mul i6 %trunc_ln139_1, i6 %trunc_ln117" [../tutorial_example/source/hls.cpp:141]   --->   Operation 82 'mul' 'mul_ln141' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 0.64>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%c0_load = load i32 %c0" [../tutorial_example/source/hls.cpp:139]   --->   Operation 83 'load' 'c0_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln139 = trunc i32 %c0_load" [../tutorial_example/source/hls.cpp:139]   --->   Operation 84 'trunc' 'trunc_ln139' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/3] (0.00ns) (grouped into DSP with root node add_ln141)   --->   "%mul_ln141 = mul i6 %trunc_ln139_1, i6 %trunc_ln117" [../tutorial_example/source/hls.cpp:141]   --->   Operation 85 'mul' 'mul_ln141' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 86 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln141 = add i6 %mul_ln141, i6 %trunc_ln139" [../tutorial_example/source/hls.cpp:141]   --->   Operation 86 'add' 'add_ln141' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 1.31>
ST_6 : Operation 87 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln141 = add i6 %mul_ln141, i6 %trunc_ln139" [../tutorial_example/source/hls.cpp:141]   --->   Operation 87 'add' 'add_ln141' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 124 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '' 'add' 'sub' 'mul' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln141 = zext i6 %add_ln141" [../tutorial_example/source/hls.cpp:141]   --->   Operation 88 'zext' 'zext_ln141' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "%filter_map_addr = getelementptr i8 %filter_map, i64 0, i64 %zext_ln141" [../tutorial_example/source/hls.cpp:141]   --->   Operation 89 'getelementptr' 'filter_map_addr' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 90 [2/2] (0.66ns)   --->   "%filter_1 = load i6 %filter_map_addr" [../tutorial_example/source/hls.cpp:141]   --->   Operation 90 'load' 'filter_1' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 7 <SV = 6> <Delay = 1.83>
ST_7 : Operation 91 [1/2] ( I:0.66ns O:0.66ns )   --->   "%filter_1 = load i6 %filter_map_addr" [../tutorial_example/source/hls.cpp:141]   --->   Operation 91 'load' 'filter_1' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_7 : Operation 92 [2/2] (1.16ns)   --->   "%call_ln117 = call void @cnn_hls_Pipeline_VITIS_LOOP_165_1, i32 %mul_i, i32 %width_read, i13 %trunc_ln132, i8 %pixel, i8 %filter_1, i32 %sum, i1 %clear" [../tutorial_example/source/hls.cpp:117]   --->   Operation 92 'call' 'call_ln117' <Predicate = true> <Delay = 1.16> <CoreType = "Generic">   --->   Generic Core

State 8 <SV = 7> <Delay = 1.26>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%specloopname_ln139 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [../tutorial_example/source/hls.cpp:139]   --->   Operation 93 'specloopname' 'specloopname_ln139' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 94 [1/2] (0.00ns)   --->   "%call_ln117 = call void @cnn_hls_Pipeline_VITIS_LOOP_165_1, i32 %mul_i, i32 %width_read, i13 %trunc_ln132, i8 %pixel, i8 %filter_1, i32 %sum, i1 %clear" [../tutorial_example/source/hls.cpp:117]   --->   Operation 94 'call' 'call_ln117' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Generic Core
ST_8 : Operation 95 [1/1] (0.88ns)   --->   "%icmp_ln146 = icmp_eq  i32 %target_2, i32 0" [../tutorial_example/source/hls.cpp:146]   --->   Operation 95 'icmp' 'icmp_ln146' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "%br_ln144 = br i1 %icmp_ln144, void %if.else, void %if.then" [../tutorial_example/source/hls.cpp:144]   --->   Operation 96 'br' 'br_ln144' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (0.00ns)   --->   "%br_ln148 = br i1 %icmp_ln146, void %for.body.i8.preheader, void %for.body.i29.preheader" [../tutorial_example/source/hls.cpp:148]   --->   Operation 97 'br' 'br_ln148' <Predicate = (!icmp_ln144)> <Delay = 0.00>
ST_8 : Operation 98 [1/1] (0.38ns)   --->   "%br_ln151 = br void %for.body.i8" [../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152]   --->   Operation 98 'br' 'br_ln151' <Predicate = (!icmp_ln144 & !icmp_ln146)> <Delay = 0.38>
ST_8 : Operation 99 [1/1] (0.38ns)   --->   "%br_ln103 = br void %for.body.i29" [../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149]   --->   Operation 99 'br' 'br_ln103' <Predicate = (!icmp_ln144 & icmp_ln146)> <Delay = 0.38>
ST_8 : Operation 100 [1/1] (0.88ns)   --->   "%c0_1 = add i32 %c0_load, i32 1" [../tutorial_example/source/hls.cpp:145]   --->   Operation 100 'add' 'c0_1' <Predicate = (icmp_ln144)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (0.22ns)   --->   "%target_3 = select i1 %icmp_ln146, i32 %target, i32 0" [../tutorial_example/source/hls.cpp:146]   --->   Operation 101 'select' 'target_3' <Predicate = (icmp_ln144)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 102 [1/1] (0.38ns)   --->   "%br_ln123 = br void %for.body.i" [../tutorial_example/source/cnn.h:123->../tutorial_example/source/hls.cpp:147]   --->   Operation 102 'br' 'br_ln123' <Predicate = (icmp_ln144)> <Delay = 0.38>

State 9 <SV = 8> <Delay = 2.00>
ST_9 : Operation 103 [1/1] (0.00ns)   --->   "%x_1 = phi i31 %add_ln151, void %for.body.i8.split, i31 0, void %for.body.i8.preheader" [../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152]   --->   Operation 103 'phi' 'x_1' <Predicate = (!icmp_ln144 & !icmp_ln146)> <Delay = 0.00>
ST_9 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln151_1 = zext i31 %x_1" [../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152]   --->   Operation 104 'zext' 'zext_ln151_1' <Predicate = (!icmp_ln144 & !icmp_ln146)> <Delay = 0.00>
ST_9 : Operation 105 [1/1] (0.88ns)   --->   "%icmp_ln151 = icmp_slt  i32 %zext_ln151_1, i32 %core_rwidth" [../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152]   --->   Operation 105 'icmp' 'icmp_ln151' <Predicate = (!icmp_ln144 & !icmp_ln146)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 106 [1/1] (0.87ns)   --->   "%add_ln151 = add i31 %x_1, i31 1" [../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152]   --->   Operation 106 'add' 'add_ln151' <Predicate = (!icmp_ln144 & !icmp_ln146)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 107 [1/1] (0.00ns)   --->   "%br_ln151 = br i1 %icmp_ln151, void %_ZN7cnnCore9shiftDownEv.exit.loopexit, void %for.body.i8.split" [../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152]   --->   Operation 107 'br' 'br_ln151' <Predicate = (!icmp_ln144 & !icmp_ln146)> <Delay = 0.00>
ST_9 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln151 = zext i31 %x_1" [../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152]   --->   Operation 108 'zext' 'zext_ln151' <Predicate = (!icmp_ln144 & !icmp_ln146 & icmp_ln151)> <Delay = 0.00>
ST_9 : Operation 109 [1/1] (0.00ns)   --->   "%trunc_ln151 = trunc i31 %x_1" [../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152]   --->   Operation 109 'trunc' 'trunc_ln151' <Predicate = (!icmp_ln144 & !icmp_ln146 & icmp_ln151)> <Delay = 0.00>
ST_9 : Operation 110 [1/1] (0.00ns)   --->   "%pixel_addr_3 = getelementptr i8 %pixel, i64 0, i64 %zext_ln151" [../tutorial_example/source/cnn.h:152->../tutorial_example/source/hls.cpp:152]   --->   Operation 110 'getelementptr' 'pixel_addr_3' <Predicate = (!icmp_ln144 & !icmp_ln146 & icmp_ln151)> <Delay = 0.00>
ST_9 : Operation 111 [2/2] (1.24ns)   --->   "%tmp_pixel_2 = load i13 %pixel_addr_3" [../tutorial_example/source/cnn.h:152->../tutorial_example/source/hls.cpp:152]   --->   Operation 111 'load' 'tmp_pixel_2' <Predicate = (!icmp_ln144 & !icmp_ln146 & icmp_ln151)> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_9 : Operation 112 [1/1] (0.00ns)   --->   "%r0_load_2 = load i32 %r0" [../tutorial_example/source/hls.cpp:153]   --->   Operation 112 'load' 'r0_load_2' <Predicate = (!icmp_ln144 & !icmp_ln146 & !icmp_ln151)> <Delay = 0.00>
ST_9 : Operation 113 [1/1] (0.88ns)   --->   "%r0_2 = add i32 %r0_load_2, i32 1" [../tutorial_example/source/hls.cpp:153]   --->   Operation 113 'add' 'r0_2' <Predicate = (!icmp_ln144 & !icmp_ln146 & !icmp_ln151)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 114 [1/1] (0.45ns)   --->   "%store_ln130 = store i32 %r0_2, i32 %r0" [../tutorial_example/source/hls.cpp:130]   --->   Operation 114 'store' 'store_ln130' <Predicate = (!icmp_ln144 & !icmp_ln146 & !icmp_ln151)> <Delay = 0.45>
ST_9 : Operation 115 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 115 'br' 'br_ln0' <Predicate = (!icmp_ln144 & !icmp_ln146 & !icmp_ln151)> <Delay = 0.00>
ST_9 : Operation 116 [1/1] (0.00ns)   --->   "%x = phi i13 %add_ln103, void %for.body.i29.split, i13 0, void %for.body.i29.preheader" [../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149]   --->   Operation 116 'phi' 'x' <Predicate = (!icmp_ln144 & icmp_ln146)> <Delay = 0.00>
ST_9 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln103_1 = zext i13 %x" [../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149]   --->   Operation 117 'zext' 'zext_ln103_1' <Predicate = (!icmp_ln144 & icmp_ln146)> <Delay = 0.00>
ST_9 : Operation 118 [1/1] (0.88ns)   --->   "%icmp_ln103 = icmp_slt  i32 %zext_ln103_1, i32 %core_rwidth" [../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149]   --->   Operation 118 'icmp' 'icmp_ln103' <Predicate = (!icmp_ln144 & icmp_ln146)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 119 [1/1] (0.75ns)   --->   "%add_ln103 = add i13 %x, i13 1" [../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149]   --->   Operation 119 'add' 'add_ln103' <Predicate = (!icmp_ln144 & icmp_ln146)> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 120 [1/1] (0.00ns)   --->   "%br_ln103 = br i1 %icmp_ln103, void %_ZN7cnnCore7shiftUpEv.exit.loopexit, void %for.body.i29.split" [../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149]   --->   Operation 120 'br' 'br_ln103' <Predicate = (!icmp_ln144 & icmp_ln146)> <Delay = 0.00>
ST_9 : Operation 121 [1/1] (0.75ns)   --->   "%add_ln104 = add i13 %x, i13 %mul_ln139" [../tutorial_example/source/cnn.h:104->../tutorial_example/source/hls.cpp:149]   --->   Operation 121 'add' 'add_ln104' <Predicate = (!icmp_ln144 & icmp_ln146 & icmp_ln103)> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln104 = zext i13 %add_ln104" [../tutorial_example/source/cnn.h:104->../tutorial_example/source/hls.cpp:149]   --->   Operation 122 'zext' 'zext_ln104' <Predicate = (!icmp_ln144 & icmp_ln146 & icmp_ln103)> <Delay = 0.00>
ST_9 : Operation 123 [1/1] (0.00ns)   --->   "%pixel_addr_2 = getelementptr i8 %pixel, i64 0, i64 %zext_ln104" [../tutorial_example/source/cnn.h:104->../tutorial_example/source/hls.cpp:149]   --->   Operation 123 'getelementptr' 'pixel_addr_2' <Predicate = (!icmp_ln144 & icmp_ln146 & icmp_ln103)> <Delay = 0.00>
ST_9 : Operation 124 [2/2] (1.24ns)   --->   "%tmp_pixel_1 = load i13 %pixel_addr_2" [../tutorial_example/source/cnn.h:104->../tutorial_example/source/hls.cpp:149]   --->   Operation 124 'load' 'tmp_pixel_1' <Predicate = (!icmp_ln144 & icmp_ln146 & icmp_ln103)> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_9 : Operation 125 [1/1] (0.00ns)   --->   "%r0_load_1 = load i32 %r0" [../tutorial_example/source/hls.cpp:150]   --->   Operation 125 'load' 'r0_load_1' <Predicate = (!icmp_ln144 & icmp_ln146 & !icmp_ln103)> <Delay = 0.00>
ST_9 : Operation 126 [1/1] (0.88ns)   --->   "%r0_1 = add i32 %r0_load_1, i32 4294967295" [../tutorial_example/source/hls.cpp:150]   --->   Operation 126 'add' 'r0_1' <Predicate = (!icmp_ln144 & icmp_ln146 & !icmp_ln103)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (0.41ns)   --->   "%store_ln130 = store i32 0, i32 %target_1" [../tutorial_example/source/hls.cpp:130]   --->   Operation 127 'store' 'store_ln130' <Predicate = (!icmp_ln144 & icmp_ln146 & !icmp_ln103)> <Delay = 0.41>
ST_9 : Operation 128 [1/1] (0.45ns)   --->   "%store_ln130 = store i32 %r0_1, i32 %r0" [../tutorial_example/source/hls.cpp:130]   --->   Operation 128 'store' 'store_ln130' <Predicate = (!icmp_ln144 & icmp_ln146 & !icmp_ln103)> <Delay = 0.45>
ST_9 : Operation 129 [1/1] (0.00ns)   --->   "%br_ln151 = br void %for.inc" [../tutorial_example/source/hls.cpp:151]   --->   Operation 129 'br' 'br_ln151' <Predicate = (!icmp_ln144 & icmp_ln146 & !icmp_ln103)> <Delay = 0.00>
ST_9 : Operation 130 [1/1] (0.00ns)   --->   "%y = phi i31 0, void %if.then, i31 %add_ln123, void %for.body.i.split" [../tutorial_example/source/cnn.h:123->../tutorial_example/source/hls.cpp:147]   --->   Operation 130 'phi' 'y' <Predicate = (icmp_ln144)> <Delay = 0.00>
ST_9 : Operation 131 [1/1] (0.00ns)   --->   "%zext_ln123 = zext i31 %y" [../tutorial_example/source/cnn.h:123->../tutorial_example/source/hls.cpp:147]   --->   Operation 131 'zext' 'zext_ln123' <Predicate = (icmp_ln144)> <Delay = 0.00>
ST_9 : Operation 132 [1/1] (0.88ns)   --->   "%icmp_ln123 = icmp_slt  i32 %zext_ln123, i32 %core_rheight" [../tutorial_example/source/cnn.h:123->../tutorial_example/source/hls.cpp:147]   --->   Operation 132 'icmp' 'icmp_ln123' <Predicate = (icmp_ln144)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 133 [1/1] (0.87ns)   --->   "%add_ln123 = add i31 %y, i31 1" [../tutorial_example/source/cnn.h:123->../tutorial_example/source/hls.cpp:147]   --->   Operation 133 'add' 'add_ln123' <Predicate = (icmp_ln144)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 134 [1/1] (0.00ns)   --->   "%br_ln123 = br i1 %icmp_ln123, void %for.inc.loopexit, void %for.body.i.split" [../tutorial_example/source/cnn.h:123->../tutorial_example/source/hls.cpp:147]   --->   Operation 134 'br' 'br_ln123' <Predicate = (icmp_ln144)> <Delay = 0.00>
ST_9 : Operation 135 [1/1] (0.00ns)   --->   "%trunc_ln123 = trunc i31 %y" [../tutorial_example/source/cnn.h:123->../tutorial_example/source/hls.cpp:147]   --->   Operation 135 'trunc' 'trunc_ln123' <Predicate = (icmp_ln144 & icmp_ln123)> <Delay = 0.00>
ST_9 : Operation 136 [1/1] (1.89ns)   --->   "%mul_ln124 = mul i13 %trunc_ln123, i13 %trunc_ln132" [../tutorial_example/source/cnn.h:124->../tutorial_example/source/hls.cpp:147]   --->   Operation 136 'mul' 'mul_ln124' <Predicate = (icmp_ln144 & icmp_ln123)> <Delay = 1.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 137 [1/1] (0.41ns)   --->   "%store_ln130 = store i32 %target_3, i32 %target_1" [../tutorial_example/source/hls.cpp:130]   --->   Operation 137 'store' 'store_ln130' <Predicate = (icmp_ln144 & !icmp_ln123)> <Delay = 0.41>
ST_9 : Operation 138 [1/1] (0.38ns)   --->   "%store_ln130 = store i32 %c0_1, i32 %c0" [../tutorial_example/source/hls.cpp:130]   --->   Operation 138 'store' 'store_ln130' <Predicate = (icmp_ln144 & !icmp_ln123)> <Delay = 0.38>
ST_9 : Operation 139 [1/1] (0.45ns)   --->   "%store_ln130 = store i32 %target_2, i32 %r0" [../tutorial_example/source/hls.cpp:130]   --->   Operation 139 'store' 'store_ln130' <Predicate = (icmp_ln144 & !icmp_ln123)> <Delay = 0.45>
ST_9 : Operation 140 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 140 'br' 'br_ln0' <Predicate = (icmp_ln144 & !icmp_ln123)> <Delay = 0.00>
ST_9 : Operation 141 [1/1] (0.38ns)   --->   "%store_ln139 = store i31 %add_ln139, i31 %i" [../tutorial_example/source/hls.cpp:139]   --->   Operation 141 'store' 'store_ln139' <Predicate = (icmp_ln144 & !icmp_ln123) | (!icmp_ln144 & icmp_ln146 & !icmp_ln103) | (!icmp_ln144 & !icmp_ln146 & !icmp_ln151)> <Delay = 0.38>
ST_9 : Operation 142 [1/1] (0.00ns)   --->   "%br_ln139 = br void %for.body" [../tutorial_example/source/hls.cpp:139]   --->   Operation 142 'br' 'br_ln139' <Predicate = (icmp_ln144 & !icmp_ln123) | (!icmp_ln144 & icmp_ln146 & !icmp_ln103) | (!icmp_ln144 & !icmp_ln146 & !icmp_ln151)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 1.24>
ST_10 : Operation 143 [1/2] ( I:1.24ns O:1.24ns )   --->   "%tmp_pixel_2 = load i13 %pixel_addr_3" [../tutorial_example/source/cnn.h:152->../tutorial_example/source/hls.cpp:152]   --->   Operation 143 'load' 'tmp_pixel_2' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>

State 11 <SV = 10> <Delay = 1.26>
ST_11 : Operation 144 [2/2] (1.26ns)   --->   "%call_ln75 = call void @cnn_hls_Pipeline_VITIS_LOOP_153_2, i32 %sub_i11, i13 %trunc_ln132, i13 %trunc_ln151, i8 %pixel" [../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134]   --->   Operation 144 'call' 'call_ln75' <Predicate = true> <Delay = 1.26> <CoreType = "Generic">   --->   Generic Core
ST_11 : Operation 145 [1/1] (0.75ns)   --->   "%add_ln156 = add i13 %trunc_ln151, i13 %mul_ln139" [../tutorial_example/source/cnn.h:156->../tutorial_example/source/hls.cpp:152]   --->   Operation 145 'add' 'add_ln156' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 0.00>
ST_12 : Operation 146 [1/2] (0.00ns)   --->   "%call_ln75 = call void @cnn_hls_Pipeline_VITIS_LOOP_153_2, i32 %sub_i11, i13 %trunc_ln132, i13 %trunc_ln151, i8 %pixel" [../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134]   --->   Operation 146 'call' 'call_ln75' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Generic Core

State 13 <SV = 12> <Delay = 1.24>
ST_13 : Operation 147 [1/1] (0.00ns)   --->   "%specloopname_ln151 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152]   --->   Operation 147 'specloopname' 'specloopname_ln151' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln156 = zext i13 %add_ln156" [../tutorial_example/source/cnn.h:156->../tutorial_example/source/hls.cpp:152]   --->   Operation 148 'zext' 'zext_ln156' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 149 [1/1] (0.00ns)   --->   "%pixel_addr_5 = getelementptr i8 %pixel, i64 0, i64 %zext_ln156" [../tutorial_example/source/cnn.h:156->../tutorial_example/source/hls.cpp:152]   --->   Operation 149 'getelementptr' 'pixel_addr_5' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 150 [1/1] ( I:1.24ns O:1.24ns )   --->   "%store_ln156 = store i8 %tmp_pixel_2, i13 %pixel_addr_5" [../tutorial_example/source/cnn.h:156->../tutorial_example/source/hls.cpp:152]   --->   Operation 150 'store' 'store_ln156' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_13 : Operation 151 [1/1] (0.00ns)   --->   "%br_ln151 = br void %for.body.i8" [../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152]   --->   Operation 151 'br' 'br_ln151' <Predicate = true> <Delay = 0.00>

State 14 <SV = 9> <Delay = 1.24>
ST_14 : Operation 152 [1/2] ( I:1.24ns O:1.24ns )   --->   "%tmp_pixel_1 = load i13 %pixel_addr_2" [../tutorial_example/source/cnn.h:104->../tutorial_example/source/hls.cpp:149]   --->   Operation 152 'load' 'tmp_pixel_1' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>

State 15 <SV = 10> <Delay = 0.38>
ST_15 : Operation 153 [2/2] (0.38ns)   --->   "%call_ln75 = call void @cnn_hls_Pipeline_VITIS_LOOP_105_2, i32 %y_1, i13 %trunc_ln132, i13 %x, i8 %pixel" [../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134]   --->   Operation 153 'call' 'call_ln75' <Predicate = true> <Delay = 0.38> <CoreType = "Generic">   --->   Generic Core

State 16 <SV = 11> <Delay = 0.00>
ST_16 : Operation 154 [1/2] (0.00ns)   --->   "%call_ln75 = call void @cnn_hls_Pipeline_VITIS_LOOP_105_2, i32 %y_1, i13 %trunc_ln132, i13 %x, i8 %pixel" [../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134]   --->   Operation 154 'call' 'call_ln75' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Generic Core

State 17 <SV = 12> <Delay = 1.24>
ST_17 : Operation 155 [1/1] (0.00ns)   --->   "%zext_ln103 = zext i13 %x" [../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149]   --->   Operation 155 'zext' 'zext_ln103' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 156 [1/1] (0.00ns)   --->   "%specloopname_ln103 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149]   --->   Operation 156 'specloopname' 'specloopname_ln103' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 157 [1/1] (0.00ns)   --->   "%pixel_addr_4 = getelementptr i8 %pixel, i64 0, i64 %zext_ln103" [../tutorial_example/source/cnn.h:108->../tutorial_example/source/hls.cpp:149]   --->   Operation 157 'getelementptr' 'pixel_addr_4' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 158 [1/1] ( I:1.24ns O:1.24ns )   --->   "%store_ln108 = store i8 %tmp_pixel_1, i13 %pixel_addr_4" [../tutorial_example/source/cnn.h:108->../tutorial_example/source/hls.cpp:149]   --->   Operation 158 'store' 'store_ln108' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_17 : Operation 159 [1/1] (0.00ns)   --->   "%br_ln103 = br void %for.body.i29" [../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149]   --->   Operation 159 'br' 'br_ln103' <Predicate = true> <Delay = 0.00>

State 18 <SV = 9> <Delay = 1.24>
ST_18 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln124 = zext i13 %mul_ln124" [../tutorial_example/source/cnn.h:124->../tutorial_example/source/hls.cpp:147]   --->   Operation 160 'zext' 'zext_ln124' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 161 [1/1] (0.00ns)   --->   "%pixel_addr_1 = getelementptr i8 %pixel, i64 0, i64 %zext_ln124" [../tutorial_example/source/cnn.h:124->../tutorial_example/source/hls.cpp:147]   --->   Operation 161 'getelementptr' 'pixel_addr_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 162 [2/2] (1.24ns)   --->   "%tmp_pixel = load i13 %pixel_addr_1" [../tutorial_example/source/cnn.h:124->../tutorial_example/source/hls.cpp:147]   --->   Operation 162 'load' 'tmp_pixel' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>

State 19 <SV = 10> <Delay = 1.24>
ST_19 : Operation 163 [1/2] ( I:1.24ns O:1.24ns )   --->   "%tmp_pixel = load i13 %pixel_addr_1" [../tutorial_example/source/cnn.h:124->../tutorial_example/source/hls.cpp:147]   --->   Operation 163 'load' 'tmp_pixel' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>

State 20 <SV = 11> <Delay = 2.00>
ST_20 : Operation 164 [2/2] (2.00ns)   --->   "%call_ln74 = call void @cnn_hls_Pipeline_VITIS_LOOP_125_2, i32 %core_rwidth, i13 %mul_ln124, i8 %pixel" [../tutorial_example/source/cnn.h:74->../tutorial_example/source/hls.cpp:134]   --->   Operation 164 'call' 'call_ln74' <Predicate = true> <Delay = 2.00> <CoreType = "Generic">   --->   Generic Core
ST_20 : Operation 165 [1/1] (0.75ns)   --->   "%add_ln128_1 = add i13 %add_ln128, i13 %mul_ln124" [../tutorial_example/source/cnn.h:128->../tutorial_example/source/hls.cpp:147]   --->   Operation 165 'add' 'add_ln128_1' <Predicate = true> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 12> <Delay = 0.00>
ST_21 : Operation 166 [1/2] (0.00ns)   --->   "%call_ln74 = call void @cnn_hls_Pipeline_VITIS_LOOP_125_2, i32 %core_rwidth, i13 %mul_ln124, i8 %pixel" [../tutorial_example/source/cnn.h:74->../tutorial_example/source/hls.cpp:134]   --->   Operation 166 'call' 'call_ln74' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Generic Core

State 22 <SV = 13> <Delay = 1.24>
ST_22 : Operation 167 [1/1] (0.00ns)   --->   "%specloopname_ln123 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [../tutorial_example/source/cnn.h:123->../tutorial_example/source/hls.cpp:147]   --->   Operation 167 'specloopname' 'specloopname_ln123' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 168 [1/1] (0.00ns)   --->   "%zext_ln128 = zext i13 %add_ln128_1" [../tutorial_example/source/cnn.h:128->../tutorial_example/source/hls.cpp:147]   --->   Operation 168 'zext' 'zext_ln128' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 169 [1/1] (0.00ns)   --->   "%pixel_addr = getelementptr i8 %pixel, i64 0, i64 %zext_ln128" [../tutorial_example/source/cnn.h:128->../tutorial_example/source/hls.cpp:147]   --->   Operation 169 'getelementptr' 'pixel_addr' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 170 [1/1] ( I:1.24ns O:1.24ns )   --->   "%store_ln128 = store i8 %tmp_pixel, i13 %pixel_addr" [../tutorial_example/source/cnn.h:128->../tutorial_example/source/hls.cpp:147]   --->   Operation 170 'store' 'store_ln128' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_22 : Operation 171 [1/1] (0.00ns)   --->   "%br_ln123 = br void %for.body.i" [../tutorial_example/source/cnn.h:123->../tutorial_example/source/hls.cpp:147]   --->   Operation 171 'br' 'br_ln123' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.300ns, clock uncertainty: 0.891ns.

 <State 1>: 2.291ns
The critical path consists of the following:
	wire read operation ('filter_read', ../tutorial_example/source/hls.cpp:117) on port 'filter' (../tutorial_example/source/hls.cpp:117) [14]  (0.000 ns)
	'mul' operation 32 bit ('mul', ../tutorial_example/source/hls.cpp:117) [43]  (2.291 ns)

 <State 2>: 2.291ns
The critical path consists of the following:
	'mul' operation 32 bit ('mul', ../tutorial_example/source/hls.cpp:117) [43]  (2.291 ns)

 <State 3>: 0.996ns
The critical path consists of the following:
	'load' operation 32 bit ('r0_load', ../tutorial_example/source/hls.cpp:139) on local variable 'r0', ../tutorial_example/source/hls.cpp:130 [64]  (0.000 ns)
	'mul' operation 6 bit of DSP[70] ('mul_ln141', ../tutorial_example/source/hls.cpp:141) [69]  (0.996 ns)

 <State 4>: 0.996ns
The critical path consists of the following:
	'mul' operation 6 bit of DSP[70] ('mul_ln141', ../tutorial_example/source/hls.cpp:141) [69]  (0.996 ns)

 <State 5>: 0.645ns
The critical path consists of the following:
	'load' operation 32 bit ('c0_load', ../tutorial_example/source/hls.cpp:139) on local variable 'c0', ../tutorial_example/source/hls.cpp:130 [65]  (0.000 ns)
	'add' operation 6 bit of DSP[70] ('add_ln141', ../tutorial_example/source/hls.cpp:141) [70]  (0.645 ns)

 <State 6>: 1.312ns
The critical path consists of the following:
	'add' operation 6 bit of DSP[70] ('add_ln141', ../tutorial_example/source/hls.cpp:141) [70]  (0.645 ns)
	'getelementptr' operation 6 bit ('filter_map_addr', ../tutorial_example/source/hls.cpp:141) [72]  (0.000 ns)
	'load' operation 8 bit ('filter', ../tutorial_example/source/hls.cpp:141) on array 'filter_map' [73]  (0.667 ns)

 <State 7>: 1.832ns
The critical path consists of the following:
	'load' operation 8 bit ('filter', ../tutorial_example/source/hls.cpp:141) on array 'filter_map' [73]  (0.667 ns)
	'call' operation 0 bit ('call_ln117', ../tutorial_example/source/hls.cpp:117) to 'cnn_hls_Pipeline_VITIS_LOOP_165_1' [74]  (1.165 ns)

 <State 8>: 1.267ns
The critical path consists of the following:
	'icmp' operation 1 bit ('icmp_ln146', ../tutorial_example/source/hls.cpp:146) [76]  (0.880 ns)
	multiplexor before 'phi' operation 31 bit ('x', ../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152) with incoming values : ('add_ln151', ../tutorial_example/source/cnn.h:151->../tutorial_example/source/hls.cpp:152) [83]  (0.387 ns)

 <State 9>: 2.003ns
The critical path consists of the following:
	'phi' operation 13 bit ('x', ../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149) with incoming values : ('add_ln103', ../tutorial_example/source/cnn.h:103->../tutorial_example/source/hls.cpp:149) [108]  (0.000 ns)
	'add' operation 13 bit ('add_ln104', ../tutorial_example/source/cnn.h:104->../tutorial_example/source/hls.cpp:149) [116]  (0.755 ns)
	'getelementptr' operation 13 bit ('pixel_addr_2', ../tutorial_example/source/cnn.h:104->../tutorial_example/source/hls.cpp:149) [118]  (0.000 ns)
	'load' operation 8 bit ('tmp_pixel', ../tutorial_example/source/cnn.h:104->../tutorial_example/source/hls.cpp:149) on array 'pixel' [119]  (1.248 ns)

 <State 10>: 1.248ns
The critical path consists of the following:
	'load' operation 8 bit ('tmp_pixel', ../tutorial_example/source/cnn.h:152->../tutorial_example/source/hls.cpp:152) on array 'pixel' [93]  (1.248 ns)

 <State 11>: 1.267ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln75', ../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134) to 'cnn_hls_Pipeline_VITIS_LOOP_153_2' [94]  (1.267 ns)

 <State 12>: 0.000ns
The critical path consists of the following:

 <State 13>: 1.248ns
The critical path consists of the following:
	'getelementptr' operation 13 bit ('pixel_addr_5', ../tutorial_example/source/cnn.h:156->../tutorial_example/source/hls.cpp:152) [97]  (0.000 ns)
	'store' operation 0 bit ('store_ln156', ../tutorial_example/source/cnn.h:156->../tutorial_example/source/hls.cpp:152) of variable 'tmp_pixel', ../tutorial_example/source/cnn.h:152->../tutorial_example/source/hls.cpp:152 on array 'pixel' [98]  (1.248 ns)

 <State 14>: 1.248ns
The critical path consists of the following:
	'load' operation 8 bit ('tmp_pixel', ../tutorial_example/source/cnn.h:104->../tutorial_example/source/hls.cpp:149) on array 'pixel' [119]  (1.248 ns)

 <State 15>: 0.387ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln75', ../tutorial_example/source/cnn.h:75->../tutorial_example/source/hls.cpp:134) to 'cnn_hls_Pipeline_VITIS_LOOP_105_2' [120]  (0.387 ns)

 <State 16>: 0.000ns
The critical path consists of the following:

 <State 17>: 1.248ns
The critical path consists of the following:
	'getelementptr' operation 13 bit ('pixel_addr_4', ../tutorial_example/source/cnn.h:108->../tutorial_example/source/hls.cpp:149) [121]  (0.000 ns)
	'store' operation 0 bit ('store_ln108', ../tutorial_example/source/cnn.h:108->../tutorial_example/source/hls.cpp:149) of variable 'tmp_pixel', ../tutorial_example/source/cnn.h:104->../tutorial_example/source/hls.cpp:149 on array 'pixel' [122]  (1.248 ns)

 <State 18>: 1.248ns
The critical path consists of the following:
	'getelementptr' operation 13 bit ('pixel_addr_1', ../tutorial_example/source/cnn.h:124->../tutorial_example/source/hls.cpp:147) [145]  (0.000 ns)
	'load' operation 8 bit ('tmp_pixel', ../tutorial_example/source/cnn.h:124->../tutorial_example/source/hls.cpp:147) on array 'pixel' [146]  (1.248 ns)

 <State 19>: 1.248ns
The critical path consists of the following:
	'load' operation 8 bit ('tmp_pixel', ../tutorial_example/source/cnn.h:124->../tutorial_example/source/hls.cpp:147) on array 'pixel' [146]  (1.248 ns)

 <State 20>: 2.003ns
The critical path consists of the following:
	'call' operation 0 bit ('call_ln74', ../tutorial_example/source/cnn.h:74->../tutorial_example/source/hls.cpp:134) to 'cnn_hls_Pipeline_VITIS_LOOP_125_2' [147]  (2.003 ns)

 <State 21>: 0.000ns
The critical path consists of the following:

 <State 22>: 1.248ns
The critical path consists of the following:
	'getelementptr' operation 13 bit ('pixel_addr', ../tutorial_example/source/cnn.h:128->../tutorial_example/source/hls.cpp:147) [150]  (0.000 ns)
	'store' operation 0 bit ('store_ln128', ../tutorial_example/source/cnn.h:128->../tutorial_example/source/hls.cpp:147) of variable 'tmp_pixel', ../tutorial_example/source/cnn.h:124->../tutorial_example/source/hls.cpp:147 on array 'pixel' [151]  (1.248 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

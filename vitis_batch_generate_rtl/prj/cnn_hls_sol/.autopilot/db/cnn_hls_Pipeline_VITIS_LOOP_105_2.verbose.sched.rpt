

================================================================
== Vitis HLS Report for 'cnn_hls_Pipeline_VITIS_LOOP_105_2'
================================================================
* Date:           Thu Feb 27 14:43:59 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        prj
* Solution:       cnn_hls_sol (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu19p-fsvb3824-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  3.30 ns|  2.003 ns|     0.89 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |        ?|        ?|         ?|         ?|    0|    0|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_105_2  |        ?|        ?|         4|          2|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 2, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.38>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%reuse_addr_reg = alloca i32 1"   --->   Operation 7 'alloca' 'reuse_addr_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%reuse_reg = alloca i32 1"   --->   Operation 8 'alloca' 'reuse_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%y = alloca i32 1" [../tutorial_example/source/cnn.h:102->../tutorial_example/source/hls.cpp:149]   --->   Operation 9 'alloca' 'y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%x_read = read i13 @_ssdm_op_Read.ap_auto.i13, i13 %x"   --->   Operation 10 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp = read i13 @_ssdm_op_Read.ap_auto.i13, i13 %empty"   --->   Operation 11 'read' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%y_1_cast_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %y_1_cast"   --->   Operation 12 'read' 'y_1_cast_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%y_1_cast_cast = sext i32 %y_1_cast_read"   --->   Operation 13 'sext' 'y_1_cast_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i8 %pixel, i64 666, i64 208, i64 4294967295"   --->   Operation 14 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %pixel, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.38ns)   --->   "%store_ln102 = store i64 %y_1_cast_cast, i64 %y" [../tutorial_example/source/cnn.h:102->../tutorial_example/source/hls.cpp:149]   --->   Operation 16 'store' 'store_ln102' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 17 [1/1] (0.38ns)   --->   "%store_ln0 = store i8 0, i8 %reuse_reg"   --->   Operation 17 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 18 [1/1] (0.38ns)   --->   "%store_ln0 = store i64 18446744073709551615, i64 %reuse_addr_reg"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body7.i"   --->   Operation 19 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.89>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%y_2 = load i64 %y" [../tutorial_example/source/cnn.h:105->../tutorial_example/source/hls.cpp:149]   --->   Operation 20 'load' 'y_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %y_2, i32 63" [../tutorial_example/source/cnn.h:105->../tutorial_example/source/hls.cpp:149]   --->   Operation 21 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln105 = br i1 %tmp_2, void %for.body7.i.split, void %for.end.i33.loopexit.exitStub" [../tutorial_example/source/cnn.h:105->../tutorial_example/source/hls.cpp:149]   --->   Operation 22 'br' 'br_ln105' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%trunc_ln105 = trunc i64 %y_2" [../tutorial_example/source/cnn.h:105->../tutorial_example/source/hls.cpp:149]   --->   Operation 23 'trunc' 'trunc_ln105' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.89ns)   --->   "%mul_ln106 = mul i13 %trunc_ln105, i13 %tmp" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 24 'mul' 'mul_ln106' <Predicate = (!tmp_2)> <Delay = 1.89> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.00>
ST_3 : Operation 25 [1/1] (0.75ns)   --->   "%add_ln106 = add i13 %mul_ln106, i13 %x_read" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 25 'add' 'add_ln106' <Predicate = (!tmp_2)> <Delay = 0.75> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln106 = zext i13 %add_ln106" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 26 'zext' 'zext_ln106' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%pixel_addr = getelementptr i8 %pixel, i64 0, i64 %zext_ln106" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 27 'getelementptr' 'pixel_addr' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_3 : Operation 28 [2/2] (1.24ns)   --->   "%pixel_load = load i13 %pixel_addr" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 28 'load' 'pixel_load' <Predicate = (!tmp_2)> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_3 : Operation 29 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln106_1 = add i13 %mul_ln106, i13 %tmp" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 29 'add' 'add_ln106_1' <Predicate = (!tmp_2)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 30 [1/1] (0.73ns) (root node of TernaryAdder)   --->   "%add_ln106_2 = add i13 %add_ln106_1, i13 %x_read" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 30 'add' 'add_ln106_2' <Predicate = (!tmp_2)> <Delay = 0.73> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.36> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 31 [1/1] (1.14ns)   --->   "%add_ln105 = add i64 %y_2, i64 18446744073709551615" [../tutorial_example/source/cnn.h:105->../tutorial_example/source/hls.cpp:149]   --->   Operation 31 'add' 'add_ln105' <Predicate = (!tmp_2)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.38ns)   --->   "%store_ln102 = store i64 %add_ln105, i64 %y" [../tutorial_example/source/cnn.h:102->../tutorial_example/source/hls.cpp:149]   --->   Operation 32 'store' 'store_ln102' <Predicate = (!tmp_2)> <Delay = 0.38>
ST_3 : Operation 46 [1/1] (0.38ns)   --->   "%ret_ln0 = ret"   --->   Operation 46 'ret' 'ret_ln0' <Predicate = (tmp_2)> <Delay = 0.38>

State 4 <SV = 3> <Delay = 1.93>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%reuse_reg_load = load i8 %reuse_reg"   --->   Operation 33 'load' 'reuse_reg_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%reuse_addr_reg_load = load i64 %reuse_addr_reg"   --->   Operation 34 'load' 'reuse_addr_reg_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/2] ( I:1.24ns O:1.24ns )   --->   "%pixel_load = load i13 %pixel_addr" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 35 'load' 'pixel_load' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_4 : Operation 36 [1/1] (1.14ns)   --->   "%addr_cmp = icmp_eq  i64 %reuse_addr_reg_load, i64 %zext_ln106" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 36 'icmp' 'addr_cmp' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 37 [1/1] (0.30ns)   --->   "%reuse_select = select i1 %addr_cmp, i8 %reuse_reg_load, i8 %pixel_load" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 37 'select' 'reuse_select' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 38 [1/1] (0.38ns)   --->   "%store_ln106 = store i8 %reuse_select, i8 %reuse_reg" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 38 'store' 'store_ln106' <Predicate = true> <Delay = 0.38>

State 5 <SV = 4> <Delay = 1.24>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%specpipeline_ln102 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [../tutorial_example/source/cnn.h:102->../tutorial_example/source/hls.cpp:149]   --->   Operation 39 'specpipeline' 'specpipeline_ln102' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%specloopname_ln105 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [../tutorial_example/source/cnn.h:105->../tutorial_example/source/hls.cpp:149]   --->   Operation 40 'specloopname' 'specloopname_ln105' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln106_1 = zext i13 %add_ln106_2" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 41 'zext' 'zext_ln106_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%pixel_addr_3 = getelementptr i8 %pixel, i64 0, i64 %zext_ln106_1" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 42 'getelementptr' 'pixel_addr_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/1] ( I:1.24ns O:1.24ns )   --->   "%store_ln106 = store i8 %reuse_select, i13 %pixel_addr_3" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 43 'store' 'store_ln106' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM_2P">   --->   Core 91 'RAM_2P' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 5041> <RAM>
ST_5 : Operation 44 [1/1] (0.38ns)   --->   "%store_ln106 = store i64 %zext_ln106_1, i64 %reuse_addr_reg" [../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149]   --->   Operation 44 'store' 'store_ln106' <Predicate = true> <Delay = 0.38>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln105 = br void %for.body7.i" [../tutorial_example/source/cnn.h:105->../tutorial_example/source/hls.cpp:149]   --->   Operation 45 'br' 'br_ln105' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 3.300ns, clock uncertainty: 0.891ns.

 <State 1>: 0.387ns
The critical path consists of the following:
	'alloca' operation 64 bit ('y', ../tutorial_example/source/cnn.h:102->../tutorial_example/source/hls.cpp:149) [7]  (0.000 ns)
	'store' operation 0 bit ('store_ln102', ../tutorial_example/source/cnn.h:102->../tutorial_example/source/hls.cpp:149) of variable 'y_1_cast_cast' on local variable 'y', ../tutorial_example/source/cnn.h:102->../tutorial_example/source/hls.cpp:149 [14]  (0.387 ns)

 <State 2>: 1.892ns
The critical path consists of the following:
	'load' operation 64 bit ('y', ../tutorial_example/source/cnn.h:105->../tutorial_example/source/hls.cpp:149) on local variable 'y', ../tutorial_example/source/cnn.h:102->../tutorial_example/source/hls.cpp:149 [19]  (0.000 ns)
	'mul' operation 13 bit ('mul_ln106', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149) [26]  (1.892 ns)

 <State 3>: 2.003ns
The critical path consists of the following:
	'add' operation 13 bit ('add_ln106', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149) [27]  (0.755 ns)
	'getelementptr' operation 13 bit ('pixel_addr', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149) [29]  (0.000 ns)
	'load' operation 8 bit ('pixel_load', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149) on array 'pixel' [32]  (1.248 ns)

 <State 4>: 1.938ns
The critical path consists of the following:
	'load' operation 8 bit ('pixel_load', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149) on array 'pixel' [32]  (1.248 ns)
	'select' operation 8 bit ('reuse_select', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149) [34]  (0.303 ns)
	'store' operation 0 bit ('store_ln106', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149) of variable 'reuse_select', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149 on local variable 'reuse_reg' [40]  (0.387 ns)

 <State 5>: 1.248ns
The critical path consists of the following:
	'getelementptr' operation 13 bit ('pixel_addr_3', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149) [38]  (0.000 ns)
	'store' operation 0 bit ('store_ln106', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149) of variable 'reuse_select', ../tutorial_example/source/cnn.h:106->../tutorial_example/source/hls.cpp:149 on array 'pixel' [39]  (1.248 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

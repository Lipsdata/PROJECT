-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn_hls is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_core : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_part : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_parent : IN STD_LOGIC_VECTOR (7 downto 0);
    width : IN STD_LOGIC_VECTOR (31 downto 0);
    height : IN STD_LOGIC_VECTOR (31 downto 0);
    filter : IN STD_LOGIC_VECTOR (31 downto 0);
    pixel_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    pixel_ce0 : OUT STD_LOGIC;
    pixel_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixel_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    pixel_ce1 : OUT STD_LOGIC;
    pixel_we1 : OUT STD_LOGIC;
    pixel_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    filter_map_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    filter_map_ce0 : OUT STD_LOGIC;
    filter_map_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    sum_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sum_ce0 : OUT STD_LOGIC;
    sum_we0 : OUT STD_LOGIC;
    sum_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    sum_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    sum_ce1 : OUT STD_LOGIC;
    sum_we1 : OUT STD_LOGIC;
    sum_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of cnn_hls is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn_hls_cnn_hls,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu19p-fsvb3824-2-e,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.390000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=6392,HLS_SYN_LUT=5712,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_295 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal width_read_reg_625 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln117_fu_300_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_631 : STD_LOGIC_VECTOR (5 downto 0);
    signal target_fu_304_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal target_reg_636 : STD_LOGIC_VECTOR (31 downto 0);
    signal core_rwidth_fu_310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal core_rwidth_reg_641 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln132_fu_316_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln132_reg_648 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln75_fu_320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln75_reg_658 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_i11_fu_326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_i11_reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_332_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_reg_669 : STD_LOGIC_VECTOR (12 downto 0);
    signal core_rheight_fu_356_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal core_rheight_reg_674 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_280_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_679 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_286_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_i_reg_684 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_fu_361_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_reg_689 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln139_fu_366_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln139_reg_694 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln128_fu_370_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln128_reg_700 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln139_fu_390_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln139_reg_711 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln144_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_721 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal filter_1_reg_738 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln146_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln146_reg_743 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal c0_1_fu_422_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal c0_1_reg_747 : STD_LOGIC_VECTOR (31 downto 0);
    signal target_3_fu_427_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal target_3_reg_752 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln151_fu_443_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln151_reg_760 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal trunc_ln151_fu_454_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln151_reg_765 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln103_fu_478_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln103_reg_779 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln123_fu_519_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln123_reg_792 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln124_fu_529_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln124_reg_797 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln156_fu_550_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln156_reg_804 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal add_ln128_1_fu_567_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln128_1_reg_814 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_start : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_idle : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_ready : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_ce : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_pixel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_pixel_ce0 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_ce0 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_we0 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_ce1 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_we1 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_start : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_done : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_idle : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_ready : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_ce : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_ce0 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_ce1 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_we1 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_start : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_done : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_idle : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_ready : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_ce : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_ce0 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_ce1 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_we1 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_start : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_done : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_idle : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_ready : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_ce : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_ce0 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_ce1 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_we1 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal clear_reg_190 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln123_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_1_reg_204 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal x_reg_215 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal y_reg_227 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_start_reg : STD_LOGIC := '0';
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_start_reg : STD_LOGIC := '0';
    signal pixel_we1_out : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_NS_fsm_state15 : STD_LOGIC;
    signal grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln141_fu_413_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_fu_449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln104_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln156_fu_554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln103_fu_558_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_fu_563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln128_fu_571_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_86 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal r0_fu_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal r0_2_fu_458_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r0_1_fu_494_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln139_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c0_fu_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal target_1_fu_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal filter_map_ce0_local : STD_LOGIC;
    signal pixel_ce0_local : STD_LOGIC;
    signal pixel_address0_local : STD_LOGIC_VECTOR (12 downto 0);
    signal pixel_we1_local : STD_LOGIC;
    signal pixel_ce1_local : STD_LOGIC;
    signal pixel_address1_local : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln117_fu_300_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal target_fu_304_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal core_rwidth_fu_310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln75_fu_320_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln75_fu_320_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln139_fu_381_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln141_fu_413_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_575_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln151_1_fu_434_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln103_1_fu_469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln104_fu_484_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln123_fu_510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln124_fu_529_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_575_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_575_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_280_ce : STD_LOGIC;
    signal grp_fu_286_ce : STD_LOGIC;
    signal grp_fu_575_ce : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_condition_734 : BOOLEAN;
    signal ap_condition_738 : BOOLEAN;
    signal ap_condition_454 : BOOLEAN;
    signal ap_condition_457 : BOOLEAN;
    signal ap_condition_750 : BOOLEAN;
    signal ap_condition_754 : BOOLEAN;
    signal ap_condition_757 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component cnn_hls_cnn_hls_Pipeline_VITIS_LOOP_165_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        mul_i : IN STD_LOGIC_VECTOR (31 downto 0);
        width : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (12 downto 0);
        pixel_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        pixel_ce0 : OUT STD_LOGIC;
        pixel_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        sext_ln165 : IN STD_LOGIC_VECTOR (7 downto 0);
        sum_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        sum_ce0 : OUT STD_LOGIC;
        sum_we0 : OUT STD_LOGIC;
        sum_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        sum_ce1 : OUT STD_LOGIC;
        sum_we1 : OUT STD_LOGIC;
        sum_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        clear : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cnn_hls_cnn_hls_Pipeline_VITIS_LOOP_153_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        sub_i11 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty_14 : IN STD_LOGIC_VECTOR (12 downto 0);
        empty : IN STD_LOGIC_VECTOR (12 downto 0);
        pixel_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        pixel_ce0 : OUT STD_LOGIC;
        pixel_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        pixel_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        pixel_ce1 : OUT STD_LOGIC;
        pixel_we1 : OUT STD_LOGIC;
        pixel_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cnn_hls_cnn_hls_Pipeline_VITIS_LOOP_105_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        y_1_cast : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (12 downto 0);
        x : IN STD_LOGIC_VECTOR (12 downto 0);
        pixel_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        pixel_ce0 : OUT STD_LOGIC;
        pixel_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        pixel_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        pixel_ce1 : OUT STD_LOGIC;
        pixel_we1 : OUT STD_LOGIC;
        pixel_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cnn_hls_cnn_hls_Pipeline_VITIS_LOOP_125_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        core_rwidth : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln124 : IN STD_LOGIC_VECTOR (12 downto 0);
        pixel_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        pixel_ce0 : OUT STD_LOGIC;
        pixel_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        pixel_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        pixel_ce1 : OUT STD_LOGIC;
        pixel_we1 : OUT STD_LOGIC;
        pixel_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component cnn_hls_mul_32s_32s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_hls_mul_13s_13s_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component cnn_hls_mac_muladd_6s_6s_6ns_6_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;



begin
    grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238 : component cnn_hls_cnn_hls_Pipeline_VITIS_LOOP_165_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_start,
        ap_done => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done,
        ap_idle => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_idle,
        ap_ready => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_ready,
        ap_ce => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_ce,
        mul_i => mul_i_reg_684,
        width => width_read_reg_625,
        empty => trunc_ln132_reg_648,
        pixel_address0 => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_pixel_address0,
        pixel_ce0 => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_pixel_ce0,
        pixel_q0 => pixel_q0,
        sext_ln165 => filter_1_reg_738,
        sum_address0 => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_address0,
        sum_ce0 => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_ce0,
        sum_we0 => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_we0,
        sum_d0 => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_d0,
        sum_q0 => sum_q0,
        sum_address1 => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_address1,
        sum_ce1 => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_ce1,
        sum_we1 => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_we1,
        sum_d1 => grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_d1,
        clear => clear_reg_190);

    grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253 : component cnn_hls_cnn_hls_Pipeline_VITIS_LOOP_153_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_start,
        ap_done => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_done,
        ap_idle => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_idle,
        ap_ready => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_ready,
        ap_ce => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_ce,
        sub_i11 => sub_i11_reg_664,
        empty_14 => trunc_ln132_reg_648,
        empty => trunc_ln151_reg_765,
        pixel_address0 => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_address0,
        pixel_ce0 => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_ce0,
        pixel_q0 => pixel_q0,
        pixel_address1 => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_address1,
        pixel_ce1 => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_ce1,
        pixel_we1 => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_we1,
        pixel_d1 => grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_d1);

    grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262 : component cnn_hls_cnn_hls_Pipeline_VITIS_LOOP_105_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_start,
        ap_done => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_done,
        ap_idle => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_idle,
        ap_ready => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_ready,
        ap_ce => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_ce,
        y_1_cast => y_1_reg_689,
        empty => trunc_ln132_reg_648,
        x => x_reg_215,
        pixel_address0 => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_address0,
        pixel_ce0 => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_ce0,
        pixel_q0 => pixel_q0,
        pixel_address1 => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_address1,
        pixel_ce1 => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_ce1,
        pixel_we1 => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_we1,
        pixel_d1 => grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_d1);

    grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272 : component cnn_hls_cnn_hls_Pipeline_VITIS_LOOP_125_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_start,
        ap_done => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_done,
        ap_idle => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_idle,
        ap_ready => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_ready,
        ap_ce => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_ce,
        core_rwidth => core_rwidth_reg_641,
        mul_ln124 => mul_ln124_reg_797,
        pixel_address0 => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_address0,
        pixel_ce0 => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_ce0,
        pixel_q0 => pixel_q0,
        pixel_address1 => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_address1,
        pixel_ce1 => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_ce1,
        pixel_we1 => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_we1,
        pixel_d1 => grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_d1);

    mul_32s_32s_32_2_1_U30 : component cnn_hls_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => filter,
        din1 => filter,
        ce => grp_fu_280_ce,
        dout => grp_fu_280_p2);

    mul_32s_32s_32_2_1_U31 : component cnn_hls_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => height,
        din1 => width,
        ce => grp_fu_286_ce,
        dout => grp_fu_286_p2);

    mul_13s_13s_13_1_1_U32 : component cnn_hls_mul_13s_13s_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        dout_WIDTH => 13)
    port map (
        din0 => empty_reg_669,
        din1 => trunc_ln132_reg_648,
        dout => mul_ln139_fu_366_p2);

    mul_13s_13s_13_1_1_U33 : component cnn_hls_mul_13s_13s_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln124_fu_529_p0,
        din1 => trunc_ln132_reg_648,
        dout => mul_ln124_fu_529_p2);

    mac_muladd_6s_6s_6ns_6_4_1_U34 : component cnn_hls_mac_muladd_6s_6s_6ns_6_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        dout_WIDTH => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_575_p0,
        din1 => trunc_ln117_reg_631,
        din2 => grp_fu_575_p2,
        ce => grp_fu_575_ce,
        dout => grp_fu_575_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm <= ap_NS_fsm;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_logic_1 = ap_NS_fsm_state15))) then 
                    grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_ready = ap_const_logic_1)) then 
                    grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c0_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    c0_fu_94 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_734)) then 
                    c0_fu_94 <= c0_1_reg_747;
                end if;
            end if; 
        end if;
    end process;

    clear_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_738)) then 
                    clear_reg_190 <= ap_const_lv1_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    clear_reg_190 <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    i_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    i_fu_86 <= ap_const_lv31_0;
                elsif ((ap_const_boolean_1 = ap_condition_738)) then 
                    i_fu_86 <= add_ln139_reg_711;
                end if;
            end if; 
        end if;
    end process;

    r0_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    r0_fu_90 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_734)) then 
                    r0_fu_90 <= target_1_fu_98;
                elsif ((ap_const_boolean_1 = ap_condition_457)) then 
                    r0_fu_90 <= r0_1_fu_494_p2;
                elsif ((ap_const_boolean_1 = ap_condition_454)) then 
                    r0_fu_90 <= r0_2_fu_458_p2;
                end if;
            end if; 
        end if;
    end process;

    target_1_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    target_1_fu_98 <= target_fu_304_p2;
                elsif ((ap_const_boolean_1 = ap_condition_734)) then 
                    target_1_fu_98 <= target_3_reg_752;
                elsif ((ap_const_boolean_1 = ap_condition_457)) then 
                    target_1_fu_98 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    x_1_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_750)) then 
                    x_1_reg_204 <= ap_const_lv31_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    x_1_reg_204 <= add_ln151_reg_760;
                end if;
            end if; 
        end if;
    end process;

    x_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_754)) then 
                    x_reg_215 <= ap_const_lv13_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    x_reg_215 <= add_ln103_reg_779;
                end if;
            end if; 
        end if;
    end process;

    y_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    y_reg_227 <= add_ln123_reg_792;
                elsif ((ap_const_boolean_1 = ap_condition_757)) then 
                    y_reg_227 <= ap_const_lv31_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                add_ln103_reg_779 <= add_ln103_fu_478_p2;
                add_ln123_reg_792 <= add_ln123_fu_519_p2;
                add_ln151_reg_760 <= add_ln151_fu_443_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                add_ln128_1_reg_814 <= add_ln128_1_fu_567_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln128_reg_700 <= add_ln128_fu_370_p2;
                core_rheight_reg_674 <= core_rheight_fu_356_p2;
                mul_i_reg_684 <= grp_fu_286_p2;
                mul_ln139_reg_694 <= mul_ln139_fu_366_p2;
                mul_reg_679 <= grp_fu_280_p2;
                y_1_reg_689 <= y_1_fu_361_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln139_reg_711 <= add_ln139_fu_390_p2;
                icmp_ln144_reg_721 <= icmp_ln144_fu_400_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln156_reg_804 <= add_ln156_fu_550_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                add_ln75_reg_658 <= add_ln75_fu_320_p2;
                core_rwidth_reg_641 <= core_rwidth_fu_310_p2;
                empty_reg_669 <= empty_fu_332_p1;
                sub_i11_reg_664 <= sub_i11_fu_326_p2;
                target_reg_636 <= target_fu_304_p2;
                trunc_ln117_reg_631 <= trunc_ln117_fu_300_p1;
                trunc_ln132_reg_648 <= trunc_ln132_fu_316_p1;
                width_read_reg_625 <= width;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                c0_1_reg_747 <= c0_1_fu_422_p2;
                icmp_ln146_reg_743 <= icmp_ln146_fu_417_p2;
                target_3_reg_752 <= target_3_fu_427_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                filter_1_reg_738 <= filter_map_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                mul_ln124_reg_797 <= mul_ln124_fu_529_p2;
                trunc_ln151_reg_765 <= trunc_ln151_fu_454_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10))) then
                reg_295 <= pixel_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state3, icmp_ln144_reg_721, icmp_ln146_reg_743, ap_CS_fsm_state8, ap_CS_fsm_state9, grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done, grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_done, ap_CS_fsm_state12, grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_done, ap_CS_fsm_state16, grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_done, ap_CS_fsm_state21, icmp_ln123_fu_514_p2, icmp_ln103_fu_473_p2, icmp_ln151_fu_438_p2, icmp_ln139_fu_385_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln139_fu_385_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9) and ((((icmp_ln103_fu_473_p2 = ap_const_lv1_0) and (icmp_ln146_reg_743 = ap_const_lv1_1) and (icmp_ln144_reg_721 = ap_const_lv1_0)) or ((icmp_ln123_fu_514_p2 = ap_const_lv1_0) and (icmp_ln144_reg_721 = ap_const_lv1_1))) or ((icmp_ln151_fu_438_p2 = ap_const_lv1_0) and (icmp_ln146_reg_743 = ap_const_lv1_0) and (icmp_ln144_reg_721 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((icmp_ln123_fu_514_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln144_reg_721 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif (((icmp_ln103_fu_473_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln146_reg_743 = ap_const_lv1_1) and (icmp_ln144_reg_721 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln103_fu_478_p2 <= std_logic_vector(unsigned(x_reg_215) + unsigned(ap_const_lv13_1));
    add_ln104_fu_484_p2 <= std_logic_vector(unsigned(x_reg_215) + unsigned(mul_ln139_reg_694));
    add_ln123_fu_519_p2 <= std_logic_vector(unsigned(y_reg_227) + unsigned(ap_const_lv31_1));
    add_ln128_1_fu_567_p2 <= std_logic_vector(unsigned(add_ln128_reg_700) + unsigned(mul_ln124_reg_797));
    add_ln128_fu_370_p2 <= std_logic_vector(signed(trunc_ln132_reg_648) + signed(ap_const_lv13_1FFF));
    add_ln139_fu_390_p2 <= std_logic_vector(unsigned(i_fu_86) + unsigned(ap_const_lv31_1));
    add_ln151_fu_443_p2 <= std_logic_vector(unsigned(x_1_reg_204) + unsigned(ap_const_lv31_1));
    add_ln156_fu_550_p2 <= std_logic_vector(unsigned(trunc_ln151_reg_765) + unsigned(mul_ln139_reg_694));
    add_ln75_fu_320_p0 <= filter;
    add_ln75_fu_320_p1 <= height;
    add_ln75_fu_320_p2 <= std_logic_vector(signed(add_ln75_fu_320_p0) + signed(add_ln75_fu_320_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state15 <= ap_NS_fsm(14);

    ap_ST_fsm_state10_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(ap_ce, grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_done)
    begin
        if (((ap_const_logic_0 = ap_ce) or (grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state13_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state14_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state15_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state16_blk_assign_proc : process(ap_ce, grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_done)
    begin
        if (((ap_const_logic_0 = ap_ce) or (grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state17_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state18_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state19_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_ce)
    begin
        if (((ap_const_logic_0 = ap_ce) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state21_blk_assign_proc : process(ap_ce, grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_done)
    begin
        if (((grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_done = ap_const_logic_0) or (ap_const_logic_0 = ap_ce))) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state22_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(ap_ce, grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done)
    begin
        if (((ap_const_logic_0 = ap_ce) or (grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(ap_ce)
    begin
        if ((ap_const_logic_0 = ap_ce)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_454_assign_proc : process(icmp_ln144_reg_721, icmp_ln146_reg_743, ap_CS_fsm_state9, icmp_ln151_fu_438_p2)
    begin
                ap_condition_454 <= ((icmp_ln151_fu_438_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln146_reg_743 = ap_const_lv1_0) and (icmp_ln144_reg_721 = ap_const_lv1_0));
    end process;


    ap_condition_457_assign_proc : process(icmp_ln144_reg_721, icmp_ln146_reg_743, ap_CS_fsm_state9, icmp_ln103_fu_473_p2)
    begin
                ap_condition_457 <= ((icmp_ln103_fu_473_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln146_reg_743 = ap_const_lv1_1) and (icmp_ln144_reg_721 = ap_const_lv1_0));
    end process;


    ap_condition_734_assign_proc : process(icmp_ln144_reg_721, ap_CS_fsm_state9, icmp_ln123_fu_514_p2)
    begin
                ap_condition_734 <= ((icmp_ln123_fu_514_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln144_reg_721 = ap_const_lv1_1));
    end process;


    ap_condition_738_assign_proc : process(icmp_ln144_reg_721, icmp_ln146_reg_743, ap_CS_fsm_state9, icmp_ln123_fu_514_p2, icmp_ln103_fu_473_p2, icmp_ln151_fu_438_p2)
    begin
                ap_condition_738 <= ((ap_const_logic_1 = ap_CS_fsm_state9) and ((((icmp_ln103_fu_473_p2 = ap_const_lv1_0) and (icmp_ln146_reg_743 = ap_const_lv1_1) and (icmp_ln144_reg_721 = ap_const_lv1_0)) or ((icmp_ln123_fu_514_p2 = ap_const_lv1_0) and (icmp_ln144_reg_721 = ap_const_lv1_1))) or ((icmp_ln151_fu_438_p2 = ap_const_lv1_0) and (icmp_ln146_reg_743 = ap_const_lv1_0) and (icmp_ln144_reg_721 = ap_const_lv1_0))));
    end process;


    ap_condition_750_assign_proc : process(icmp_ln144_reg_721, icmp_ln146_fu_417_p2, ap_CS_fsm_state8, grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done)
    begin
                ap_condition_750 <= ((grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln146_fu_417_p2 = ap_const_lv1_0) and (icmp_ln144_reg_721 = ap_const_lv1_0));
    end process;


    ap_condition_754_assign_proc : process(icmp_ln144_reg_721, icmp_ln146_fu_417_p2, ap_CS_fsm_state8, grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done)
    begin
                ap_condition_754 <= ((grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln146_fu_417_p2 = ap_const_lv1_1) and (icmp_ln144_reg_721 = ap_const_lv1_0));
    end process;


    ap_condition_757_assign_proc : process(icmp_ln144_reg_721, ap_CS_fsm_state8, grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done)
    begin
                ap_condition_757 <= ((grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln144_reg_721 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_ce, ap_CS_fsm_state3, icmp_ln139_fu_385_p2)
    begin
        if (((icmp_ln139_fu_385_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_ce, ap_CS_fsm_state3, icmp_ln139_fu_385_p2)
    begin
        if (((icmp_ln139_fu_385_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c0_1_fu_422_p2 <= std_logic_vector(unsigned(c0_fu_94) + unsigned(ap_const_lv32_1));
    core_rheight_fu_356_p2 <= std_logic_vector(unsigned(add_ln75_reg_658) + unsigned(ap_const_lv32_FFFFFFFF));
    core_rwidth_fu_310_p1 <= width;
    core_rwidth_fu_310_p2 <= std_logic_vector(unsigned(target_fu_304_p2) + unsigned(core_rwidth_fu_310_p1));
    empty_fu_332_p1 <= sub_i11_fu_326_p2(13 - 1 downto 0);
    filter_map_address0 <= zext_ln141_fu_413_p1(6 - 1 downto 0);
    filter_map_ce0 <= filter_map_ce0_local;

    filter_map_ce0_local_assign_proc : process(ap_ce, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            filter_map_ce0_local <= ap_const_logic_1;
        else 
            filter_map_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_ce_assign_proc : process(ap_ce, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_ce <= ap_const_logic_1;
        else 
            grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_start <= grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_ap_start_reg;

    grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_ce_assign_proc : process(ap_ce, ap_CS_fsm_state20, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_ce <= ap_const_logic_1;
        else 
            grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_start <= grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_ap_start_reg;

    grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_ce_assign_proc : process(ap_ce, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_ce <= ap_const_logic_1;
        else 
            grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_start <= grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_ap_start_reg;

    grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_ce_assign_proc : process(ap_ce, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_ce <= ap_const_logic_1;
        else 
            grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_start <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_ap_start_reg;

    grp_fu_280_ce_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))))) then 
            grp_fu_280_ce <= ap_const_logic_1;
        else 
            grp_fu_280_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_286_ce_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_ce, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))))) then 
            grp_fu_286_ce <= ap_const_logic_1;
        else 
            grp_fu_286_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_575_ce_assign_proc : process(ap_ce, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_ce) and ((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_575_ce <= ap_const_logic_1;
        else 
            grp_fu_575_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_575_p0 <= r0_fu_90(6 - 1 downto 0);
    grp_fu_575_p2 <= c0_fu_94(6 - 1 downto 0);
    icmp_ln103_fu_473_p2 <= "1" when (signed(zext_ln103_1_fu_469_p1) < signed(core_rwidth_reg_641)) else "0";
    icmp_ln123_fu_514_p2 <= "1" when (signed(zext_ln123_fu_510_p1) < signed(core_rheight_reg_674)) else "0";
    icmp_ln139_fu_385_p2 <= "1" when (signed(zext_ln139_fu_381_p1) < signed(mul_reg_679)) else "0";
    icmp_ln144_fu_400_p2 <= "1" when (r0_fu_90 = target_1_fu_98) else "0";
    icmp_ln146_fu_417_p2 <= "1" when (target_1_fu_98 = ap_const_lv32_0) else "0";
    icmp_ln151_fu_438_p2 <= "1" when (signed(zext_ln151_1_fu_434_p1) < signed(core_rwidth_reg_641)) else "0";
    mul_ln124_fu_529_p0 <= y_reg_227(13 - 1 downto 0);

    pixel_address0_assign_proc : process(ap_CS_fsm_state8, grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_pixel_address0, grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_address0, ap_CS_fsm_state12, grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_address0, ap_CS_fsm_state16, grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_address0, ap_CS_fsm_state21, pixel_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            pixel_address0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pixel_address0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            pixel_address0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pixel_address0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_pixel_address0;
        else 
            pixel_address0 <= pixel_address0_local;
        end if; 
    end process;


    pixel_address0_local_assign_proc : process(icmp_ln144_reg_721, icmp_ln146_reg_743, ap_CS_fsm_state9, ap_CS_fsm_state18, icmp_ln103_fu_473_p2, icmp_ln151_fu_438_p2, zext_ln151_fu_449_p1, zext_ln104_fu_489_p1, zext_ln124_fu_563_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            pixel_address0_local <= zext_ln124_fu_563_p1(13 - 1 downto 0);
        elsif (((icmp_ln103_fu_473_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln146_reg_743 = ap_const_lv1_1) and (icmp_ln144_reg_721 = ap_const_lv1_0))) then 
            pixel_address0_local <= zext_ln104_fu_489_p1(13 - 1 downto 0);
        elsif (((icmp_ln151_fu_438_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln146_reg_743 = ap_const_lv1_0) and (icmp_ln144_reg_721 = ap_const_lv1_0))) then 
            pixel_address0_local <= zext_ln151_fu_449_p1(13 - 1 downto 0);
        else 
            pixel_address0_local <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    pixel_address1_assign_proc : process(grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_address1, ap_CS_fsm_state12, grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_address1, ap_CS_fsm_state16, grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_address1, ap_CS_fsm_state21, pixel_address1_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            pixel_address1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pixel_address1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            pixel_address1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_address1;
        else 
            pixel_address1 <= pixel_address1_local;
        end if; 
    end process;


    pixel_address1_local_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state22, zext_ln156_fu_554_p1, zext_ln103_fu_558_p1, zext_ln128_fu_571_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            pixel_address1_local <= zext_ln128_fu_571_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            pixel_address1_local <= zext_ln103_fu_558_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            pixel_address1_local <= zext_ln156_fu_554_p1(13 - 1 downto 0);
        else 
            pixel_address1_local <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    pixel_ce0_assign_proc : process(ap_CS_fsm_state8, grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_pixel_ce0, grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_ce0, ap_CS_fsm_state12, grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_ce0, ap_CS_fsm_state16, grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_ce0, ap_CS_fsm_state21, pixel_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            pixel_ce0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pixel_ce0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            pixel_ce0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            pixel_ce0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_pixel_ce0;
        else 
            pixel_ce0 <= pixel_ce0_local;
        end if; 
    end process;


    pixel_ce0_local_assign_proc : process(ap_ce, icmp_ln144_reg_721, icmp_ln146_reg_743, ap_CS_fsm_state9, ap_CS_fsm_state18, icmp_ln103_fu_473_p2, icmp_ln151_fu_438_p2)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((icmp_ln103_fu_473_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln146_reg_743 = ap_const_lv1_1) and (icmp_ln144_reg_721 = ap_const_lv1_0)) or ((icmp_ln151_fu_438_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln146_reg_743 = ap_const_lv1_0) and (icmp_ln144_reg_721 = ap_const_lv1_0)))) then 
            pixel_ce0_local <= ap_const_logic_1;
        else 
            pixel_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    pixel_ce1_assign_proc : process(grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_ce1, ap_CS_fsm_state12, grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_ce1, ap_CS_fsm_state16, grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_ce1, ap_CS_fsm_state21, pixel_ce1_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            pixel_ce1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pixel_ce1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            pixel_ce1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_ce1;
        else 
            pixel_ce1 <= pixel_ce1_local;
        end if; 
    end process;


    pixel_ce1_local_assign_proc : process(ap_ce, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state22)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            pixel_ce1_local <= ap_const_logic_1;
        else 
            pixel_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    pixel_d1_assign_proc : process(reg_295, grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_d1, ap_CS_fsm_state12, grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_d1, ap_CS_fsm_state16, grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_d1, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            pixel_d1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pixel_d1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            pixel_d1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_d1;
        else 
            pixel_d1 <= reg_295;
        end if; 
    end process;


    pixel_we1_assign_proc : process(grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_we1, ap_CS_fsm_state12, grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_we1, ap_CS_fsm_state16, grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_we1, ap_CS_fsm_state21, pixel_we1_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            pixel_we1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_125_2_fu_272_pixel_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            pixel_we1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_105_2_fu_262_pixel_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            pixel_we1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_153_2_fu_253_pixel_we1;
        else 
            pixel_we1 <= (pixel_we1_out or ap_const_logic_0);
        end if; 
    end process;


    pixel_we1_local_assign_proc : process(ap_ce, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state22)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            pixel_we1_local <= ap_const_logic_1;
        else 
            pixel_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    pixel_we1_out <= pixel_we1_local;
    r0_1_fu_494_p2 <= std_logic_vector(unsigned(r0_fu_90) + unsigned(ap_const_lv32_FFFFFFFF));
    r0_2_fu_458_p2 <= std_logic_vector(unsigned(r0_fu_90) + unsigned(ap_const_lv32_1));
    sub_i11_fu_326_p2 <= std_logic_vector(unsigned(add_ln75_fu_320_p2) + unsigned(ap_const_lv32_FFFFFFFE));
    sum_address0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_address0;
    sum_address1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_address1;
    sum_ce0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_ce0;
    sum_ce1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_ce1;
    sum_d0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_d0;
    sum_d1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_d1;
    sum_we0 <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_we0;
    sum_we1 <= grp_cnn_hls_Pipeline_VITIS_LOOP_165_1_fu_238_sum_we1;
    target_3_fu_427_p3 <= 
        target_reg_636 when (icmp_ln146_fu_417_p2(0) = '1') else 
        ap_const_lv32_0;
    target_fu_304_p0 <= filter;
    target_fu_304_p2 <= std_logic_vector(signed(target_fu_304_p0) + signed(ap_const_lv32_FFFFFFFF));
    trunc_ln117_fu_300_p0 <= filter;
    trunc_ln117_fu_300_p1 <= trunc_ln117_fu_300_p0(6 - 1 downto 0);
    trunc_ln132_fu_316_p1 <= core_rwidth_fu_310_p2(13 - 1 downto 0);
    trunc_ln151_fu_454_p1 <= x_1_reg_204(13 - 1 downto 0);
    y_1_fu_361_p2 <= std_logic_vector(unsigned(add_ln75_reg_658) + unsigned(ap_const_lv32_FFFFFFFD));
    zext_ln103_1_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_215),32));
    zext_ln103_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_215),64));
    zext_ln104_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln104_fu_484_p2),64));
    zext_ln123_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_reg_227),32));
    zext_ln124_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln124_reg_797),64));
    zext_ln128_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln128_1_reg_814),64));
    zext_ln139_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_86),32));
    zext_ln141_fu_413_p0 <= grp_fu_575_p3;
    zext_ln141_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln141_fu_413_p0),64));
    zext_ln151_1_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_1_reg_204),32));
    zext_ln151_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_1_reg_204),64));
    zext_ln156_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln156_reg_804),64));
end behav;
